<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TcHmiSrvExtNet.Core</name>
    </assembly>
    <members>
        <member name="T:TcHmiSrv.Core.Events.IExternalCaller`1">
            <summary>
            Provides an interface for calling events from outside the type that defines the events.
            </summary>
            <typeparam name="T">The type of the value that is used to identify which event should be called in <see cref="M:TcHmiSrv.Core.Events.IExternalCaller`1.ExternalCall(`0,System.EventArgs)"/>.</typeparam>
        </member>
        <member name="M:TcHmiSrv.Core.Events.IExternalCaller`1.ExternalCall(`0,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
        </member>
        <member name="T:TcHmiSrv.Core.Events.IExternalCaller`2">
            <summary>
            Provides an interface for calling events from outside the type that defines the events.
            </summary>
            <typeparam name="T">The type of the value that is used to identify which event should be called in <see cref="M:TcHmiSrv.Core.Events.IExternalCaller`2.ExternalCall(`0,System.EventArgs)"/>.</typeparam>
            <typeparam name="TResult">The type of the value that is returned by the events.</typeparam>
        </member>
        <member name="M:TcHmiSrv.Core.Events.IExternalCaller`2.ExternalCall(`0,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The value that is returned by the called event.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Value">
            <summary>
            Represents a value of any <see cref="T:TcHmiSrv.Core.ValueType"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Boolean">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.Boolean"/> value that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Boolean)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:System.Boolean"/> value to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Byte">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Byte"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.Byte"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Byte)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:System.Byte"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.SByte">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.SByte"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.SByte"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.SByte)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:System.SByte"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Char">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Char"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.Char"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Char)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:System.Char"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Int16">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Int16"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.Int16"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Int16)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:System.Int16"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.UInt16">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.UInt16"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An <see cref="T:System.UInt16"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.UInt16)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:System.UInt16"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Int32">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An <see cref="T:System.Int32"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Int32)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:System.Int32"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.UInt32">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An <see cref="T:System.UInt32"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.UInt32)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:System.UInt32"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Int64">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Int64"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.Int64"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Int64)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:System.Int64"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.UInt64">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.UInt64"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An <see cref="T:System.UInt64"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.UInt64)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:System.UInt64"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Single">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Single"/>-precision floating-point number.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.Single"/>ing-point number that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Single)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:System.Single"/>-precision floating-point number to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Single"/>-precision floating-point number to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Double">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Double"/>-precision floating-point number.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.Double"/>-precision floating-point number that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Double)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:System.Double"/>-precision floating-point number to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Double"/>-precision floating-point number to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.String">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.String"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.String)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:System.String"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.String"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~TcHmiSrv.Core.Access">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Access"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An <see cref="T:TcHmiSrv.Core.Access"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Access)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:TcHmiSrv.Core.Access"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Access"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~TcHmiSrv.Core.Alarm">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An <see cref="T:TcHmiSrv.Core.Alarm"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Alarm)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:TcHmiSrv.Core.Alarm"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Alarm"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~TcHmiSrv.Core.Event">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An <see cref="T:TcHmiSrv.Core.Event"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Event)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:TcHmiSrv.Core.Event"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Event"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~TcHmiSrv.Core.Message">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Message"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Message)~TcHmiSrv.Core.Value">
            <summary>
            Converts an <see cref="T:TcHmiSrv.Core.Message"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Message"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~TcHmiSrv.Core.Severity">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Severity"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Severity"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Severity)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:TcHmiSrv.Core.Severity"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Severity"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.DateTime">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate instance of the <see cref="T:System.DateTime"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.DateTime"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.DateTime)~TcHmiSrv.Core.Value">
            <summary>
            Converts an instance of the <see cref="T:System.DateTime"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.TimeSpan">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate instance of the <see cref="T:System.TimeSpan"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.TimeSpan"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.TimeSpan)~TcHmiSrv.Core.Value">
            <summary>
            Converts an instance of the <see cref="T:System.TimeSpan"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetTypeCode">
            <summary>
            Gets the <see cref="T:System.TypeCode"/> for this <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.TypeCode"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToBoolean(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Boolean"/> value using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.Boolean"/> value that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToByte(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Byte"/> using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.Byte"/> that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToChar(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Char"/> using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.Char"/> that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToDateTime(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.DateTime"/> using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.DateTime"/> that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToDecimal(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Decimal"/> value using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.Decimal"/> value that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToDouble(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Double"/>-precision floating-point number using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.Double"/>-precision floating-point number that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToInt16(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Int16"/> integer using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.Int16"/> integer that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToInt32(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Int32"/> using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>An <see cref="T:System.Int32"/> that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToInt64(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Int64"/> integer using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.Int64"/> integer that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToSByte(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.SByte"/> using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.SByte"/> that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToSingle(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Single"/>-precision floating-point number using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.Single"/>-precision floating-point number that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToString(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.String"/> using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>A <see cref="T:System.String"/> that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.Object"/> of the specified <see cref="T:System.Type"/> using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="conversionType">The <see cref="T:System.Type"/> to which this <see cref="T:TcHmiSrv.Core.Value"/> is converted.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>An <see cref="T:System.Object"/> of <paramref name="conversionType"/> whose value is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToUInt16(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.UInt16"/> integer using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>An <see cref="T:System.UInt16"/> integer that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToUInt32(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.UInt32"/> using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>An <see cref="T:System.UInt32"/> that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToUInt64(System.IFormatProvider)">
            <summary>
            Converts the <see cref="T:TcHmiSrv.Core.Value"/> to an equivalent <see cref="T:System.UInt64"/> integer using the specified <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>An <see cref="T:System.UInt64"/> integer that is equivalent to the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,TcHmiSrv#Core#Value}}#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates through the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates through the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.System#Collections#Generic#IEnumerable{TcHmiSrv#Core#Value}#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates through the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Value.System#Collections#Generic#IReadOnlyDictionary{System#String,TcHmiSrv#Core#Value}#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the keys of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.System#Collections#Generic#IReadOnlyDictionary{System#String,TcHmiSrv#Core#Value}#Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Value"/>s in the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(TcHmiSrv.Core.Value)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:TcHmiSrv.Core.Value"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Value"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>A new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ShallowCopy">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Value"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Value"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(TcHmiSrv.Core.Value)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Value"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:TcHmiSrv.Core.Value"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Value"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Value.IsEmpty">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Value"/> is empty.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.Type">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.ValueType"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.IsNull">
            <summary>
            Gets a value that indicates whether <see cref="P:TcHmiSrv.Core.Value.Type"/> equals <see cref="F:TcHmiSrv.Core.ValueType.Null"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.IsNumber">
            <summary>
            Gets a value that indicates whether <see cref="P:TcHmiSrv.Core.Value.Type"/> equals <see cref="F:TcHmiSrv.Core.ValueType.Int32"/>, <see cref="F:TcHmiSrv.Core.ValueType.Double"/> or <see cref="F:TcHmiSrv.Core.ValueType.Int64"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.IsVector">
            <summary>
            Gets a value that indicates whether <see cref="P:TcHmiSrv.Core.Value.Type"/> equals <see cref="F:TcHmiSrv.Core.ValueType.Vector"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.IsMapOrStruct">
            <summary>
            Gets a value that indicates whether <see cref="P:TcHmiSrv.Core.Value.Type"/> equals <see cref="F:TcHmiSrv.Core.ValueType.Map"/> or <see cref="F:TcHmiSrv.Core.ValueType.Struct"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.IsArray">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Value"/> is an <see cref="T:System.Array"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.Length">
            <summary>
            Gets the total number of elements in all the dimensions of the <see cref="T:System.Array"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.LongLength">
            <summary>
            Gets a 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.Capacity">
            <summary>
            Contains the total number of <see cref="T:TcHmiSrv.Core.Value"/>s the internal data structure can hold without resizing.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.ContainsJson">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Value"/> contains a JSON <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Byte"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.SByte)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.SByte"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Char"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Int16"/> integer.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.UInt16"/> integer.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Int64"/> integer.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.UInt64"/> integer.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Single"/>-precision floating-point number.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Double"/>-precision floating-point number.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.String"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(TcHmiSrv.Core.Access)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:TcHmiSrv.Core.Access"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(TcHmiSrv.Core.Alarm)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Byte"/>s.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(TcHmiSrv.Core.Event)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(TcHmiSrv.Core.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(TcHmiSrv.Core.Severity)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:TcHmiSrv.Core.Severity"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="value">The initial value of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Collections.Generic.IList{TcHmiSrv.Core.Value})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="list">The <see cref="T:System.Collections.Generic.IList`1"/> containing the <see cref="T:TcHmiSrv.Core.Value"/>s of the new <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Collections.Generic.IEnumerable{TcHmiSrv.Core.Value})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="collection">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose <see cref="T:TcHmiSrv.Core.Value"/>s are copied to the new <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(TcHmiSrv.Core.Value[])">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Array"/>.
            </summary>
            <param name="array">The <see cref="T:System.Array"/> containing the <see cref="T:TcHmiSrv.Core.Value"/>s of the new <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.#ctor(System.Collections.Generic.IDictionary{System.String,TcHmiSrv.Core.Value})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Value"/> class with the specified <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/> whose keys and <see cref="T:TcHmiSrv.Core.Value"/>s are copied to the new <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Equality(TcHmiSrv.Core.Value,TcHmiSrv.Core.Value)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Value"/> class are equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <returns>true if <paramref name="current"/> equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Inequality(TcHmiSrv.Core.Value,TcHmiSrv.Core.Value)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Value"/> class are not equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <returns>true if <paramref name="current"/> does not equal <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_LessThan(TcHmiSrv.Core.Value,TcHmiSrv.Core.Value)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Value"/> class is less than another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <returns>true if <paramref name="current"/> is less than <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_GreaterThan(TcHmiSrv.Core.Value,TcHmiSrv.Core.Value)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Value"/> class is greater than another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <returns>true if <paramref name="current"/> is greater than <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_LessThanOrEqual(TcHmiSrv.Core.Value,TcHmiSrv.Core.Value)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Value"/> class is less than or equal to another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <returns>true if <paramref name="current"/> is less than or equal to <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_GreaterThanOrEqual(TcHmiSrv.Core.Value,TcHmiSrv.Core.Value)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Value"/> class is greater than or equal to another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <returns>true if <paramref name="current"/> is greater than or equal to <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Decimal">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:System.Decimal"/> value that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Decimal)~TcHmiSrv.Core.Value">
            <summary>
            Converts a <see cref="T:System.Decimal"/> value to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(TcHmiSrv.Core.Value)~System.Byte[]">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate array of <see cref="T:System.Byte"/>s.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An array of <see cref="T:System.Byte"/>s that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.op_Implicit(System.Byte[])~TcHmiSrv.Core.Value">
            <summary>
            Converts an array of <see cref="T:System.Byte"/>s to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The array of <see cref="T:System.Byte"/>s to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromBoolean(System.Boolean)">
            <summary>
            Converts a <see cref="T:System.Boolean"/> value to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromByte(System.Byte)">
            <summary>
            Converts an <see cref="T:System.Byte"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromSByte(System.SByte)">
            <summary>
            Converts an <see cref="T:System.SByte"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromChar(System.Char)">
            <summary>
            Converts a <see cref="T:System.Char"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromDecimal(System.Decimal)">
            <summary>
            Converts a <see cref="T:System.Decimal"/> value to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromInt16(System.Int16)">
            <summary>
            Converts an <see cref="T:System.Int16"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromUInt16(System.UInt16)">
            <summary>
            Converts an <see cref="T:System.UInt16"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromInt32(System.Int32)">
            <summary>
            Converts an <see cref="T:System.Int32"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromUInt32(System.UInt32)">
            <summary>
            Converts an <see cref="T:System.UInt32"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromInt64(System.Int64)">
            <summary>
            Converts a <see cref="T:System.Int64"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromUInt64(System.UInt64)">
            <summary>
            Converts a <see cref="T:System.UInt64"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromDouble(System.Double)">
            <summary>
            Converts a <see cref="T:System.Double"/>-precision floating-point number to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Double"/>-precision floating-point number to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromSingle(System.Single)">
            <summary>
            Converts a <see cref="T:System.Single"/>-precision floating-point number to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.Single"/>-precision floating-point number to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromString(System.String)">
            <summary>
            Converts a <see cref="T:System.String"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.String"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromAccess(TcHmiSrv.Core.Access)">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Access"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>An <see cref="T:TcHmiSrv.Core.Access"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromAlarm(TcHmiSrv.Core.Alarm)">
            <summary>
            Converts an <see cref="T:TcHmiSrv.Core.Alarm"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Alarm"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromBytes(System.Byte[])">
            <summary>
            Converts an array of <see cref="T:System.Byte"/>s to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The array of <see cref="T:System.Byte"/>s to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromEvent(TcHmiSrv.Core.Event)">
            <summary>
            Converts an <see cref="T:TcHmiSrv.Core.Event"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Event"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromMessage(TcHmiSrv.Core.Message)">
            <summary>
            Converts an <see cref="T:TcHmiSrv.Core.Message"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Message"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromSeverity(TcHmiSrv.Core.Severity)">
            <summary>
            Converts a <see cref="T:TcHmiSrv.Core.Severity"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Severity"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromDateTime(System.DateTime)">
            <summary>
            Converts an instance of the <see cref="T:System.DateTime"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.FromTimeSpan(System.TimeSpan)">
            <summary>
            Converts an instance of the <see cref="T:System.TimeSpan"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToValue">
            <summary>
            Returns the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToArray">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Array"/>.
            </summary>
            <returns>The inner <see cref="T:System.Array"/> of the current <see cref="T:TcHmiSrv.Core.Value"/> if <see cref="P:TcHmiSrv.Core.Value.IsArray"/> is true. -or- An <see cref="T:System.Array"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/> if it contains a <see cref="T:System.Collections.Generic.List`1"/>. -or- An empty <see cref="T:System.Array"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToBoolean">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Boolean"/>.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToByte">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Byte"/>.
            </summary>
            <returns>A <see cref="T:System.Byte"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToSByte">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.SByte"/>.
            </summary>
            <returns>A <see cref="T:System.Byte"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToChar">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Char"/>.
            </summary>
            <returns>A <see cref="T:System.Char"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToDecimal">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Decimal"/>.
            </summary>
            <returns>A <see cref="T:System.Decimal"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToInt16">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Int16"/>.
            </summary>
            <returns>A <see cref="T:System.Int16"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToUInt16">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.UInt16"/>.
            </summary>
            <returns>An <see cref="T:System.UInt16"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToInt32">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Int32"/>.
            </summary>
            <returns>An <see cref="T:System.Int32"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToUInt32">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.UInt32"/>.
            </summary>
            <returns>An <see cref="T:System.UInt32"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToInt64">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Int64"/>.
            </summary>
            <returns>A <see cref="T:System.Int64"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToUInt64">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.UInt64"/>.
            </summary>
            <returns>An <see cref="T:System.UInt64"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToDouble">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Double"/>-precision floating-point number.
            </summary>
            <returns>A <see cref="T:System.Double"/>-precision floating-point number that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToSingle">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:System.Single"/>-precision floating-point number.
            </summary>
            <returns>A <see cref="T:System.Single"/>-precision floating-point number that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToAccess">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Access"/>.
            </summary>
            <returns>An <see cref="T:TcHmiSrv.Core.Access"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToAlarm">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <returns>An <see cref="T:TcHmiSrv.Core.Alarm"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToBytes">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate array of <see cref="T:System.Byte"/>s.
            </summary>
            <returns>An array of <see cref="T:System.Byte"/>s that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToEvent">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <returns>An <see cref="T:TcHmiSrv.Core.Event"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToMessage">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <returns>An <see cref="T:TcHmiSrv.Core.Message"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToSeverity">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Core.Severity"/>.
            </summary>
            <returns>A <see cref="T:TcHmiSrv.Core.Severity"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToDateTime">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate instance of the <see cref="T:System.DateTime"/> class.
            </summary>
            <returns>A <see cref="T:System.DateTime"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToTimeSpan">
            <summary>
            Converts this instance of the <see cref="T:TcHmiSrv.Core.Value"/> class to the appropriate instance of the <see cref="T:System.TimeSpan"/> class.
            </summary>
            <returns>A <see cref="T:System.TimeSpan"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetBool(System.IFormatProvider)">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value of the <see cref="T:TcHmiSrv.Core.Value"/>, using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>The <see cref="T:System.Boolean"/> value of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetBool">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Boolean"/> value of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetByte">
            <summary>
            Gets the <see cref="T:System.Byte"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Byte"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetSByte">
            <summary>
            Gets the <see cref="T:System.SByte"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.SByte"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetChar">
            <summary>
            Gets the <see cref="T:System.Char"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Char"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetDecimal">
            <summary>
            Gets the <see cref="T:System.Decimal"/> value of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Decimal"/> value of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetInt16">
            <summary>
            Gets the <see cref="T:System.Int16"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Int16"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetUInt16">
            <summary>
            Gets the <see cref="T:System.UInt16"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.UInt16"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetInt32(System.IFormatProvider)">
            <summary>
            Gets the <see cref="T:System.Int32"/> of the <see cref="T:TcHmiSrv.Core.Value"/>, using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>The <see cref="T:System.Int32"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetInt32">
            <summary>
            Gets the <see cref="T:System.Int32"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Int32"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetUInt32">
            <summary>
            Gets the <see cref="T:System.UInt32"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.UInt32"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetInt64(System.IFormatProvider)">
            <summary>
            Gets the <see cref="T:System.Int64"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>, using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>The <see cref="T:System.Int64"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetInt64">
            <summary>
            Gets the <see cref="T:System.Int64"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Int64"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetUInt64">
            <summary>
            Gets the <see cref="T:System.UInt64"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.UInt64"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetSingle">
            <summary>
            Gets the <see cref="T:System.Single"/>-precision floating-point number of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Single"/>-precision floating-point number of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetDouble(System.IFormatProvider)">
            <summary>
            Gets the <see cref="T:System.Double"/>-precision floating-point number of the <see cref="T:TcHmiSrv.Core.Value"/>, using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>The <see cref="T:System.Double"/>-precision floating-point number of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetDouble">
            <summary>
            Gets the <see cref="T:System.Double"/>-precision floating-point number of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Double"/>-precision floating-point number of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetString(System.IFormatProvider)">
            <summary>
            Gets the <see cref="T:System.String"/> of the <see cref="T:TcHmiSrv.Core.Value"/>, using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>The <see cref="T:System.String"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetString">
            <summary>
            Gets the <see cref="T:System.String"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.String"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetAccess">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Access"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:TcHmiSrv.Core.Access"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetAlarm">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Alarm"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:TcHmiSrv.Core.Alarm"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetBytes">
            <summary>
            Gets the <see cref="T:System.Byte"/>s of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.Byte"/>s of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetEvent">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Event"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:TcHmiSrv.Core.Event"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetMessage">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Message"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:TcHmiSrv.Core.Message"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetSeverity">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetDateTime(System.IFormatProvider)">
            <summary>
            Gets the <see cref="T:System.DateTime"/> of the <see cref="T:TcHmiSrv.Core.Value"/>, using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>The <see cref="T:System.DateTime"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetDateTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.DateTime"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetTimeSpan(System.IFormatProvider)">
            <summary>
            Gets the <see cref="T:System.TimeSpan"/> of the <see cref="T:TcHmiSrv.Core.Value"/>, using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
            <returns>The <see cref="T:System.TimeSpan"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetTimeSpan">
            <summary>
            Gets the <see cref="T:System.TimeSpan"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>The <see cref="T:System.TimeSpan"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Boolean)">
            <summary>
            Sets the <see cref="T:System.Boolean"/> value of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Byte)">
            <summary>
            Gets the <see cref="T:System.Byte"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.SByte)">
            <summary>
            Gets the <see cref="T:System.SByte"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Char)">
            <summary>
            Gets the <see cref="T:System.Char"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Decimal)">
            <summary>
            Gets the <see cref="T:System.Decimal"/> value of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Int16)">
            <summary>
            Gets the <see cref="T:System.Int16"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> integer to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.UInt16)">
            <summary>
            Gets the <see cref="T:System.UInt16"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> integer to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Int32"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.UInt32)">
            <summary>
            Gets the <see cref="T:System.UInt32"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Int64)">
            <summary>
            Gets the <see cref="T:System.Int64"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> integer to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.UInt64)">
            <summary>
            Gets the <see cref="T:System.UInt64"/> integer of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> integer to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Single)">
            <summary>
            Gets the <see cref="T:System.Single"/>-precision floating-point number of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Single"/>-precision floating-point number to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Double)">
            <summary>
            Gets the <see cref="T:System.Double"/>-precision floating-point number of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Double"/>-precision floating-point number to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.String"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(TcHmiSrv.Core.Access)">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Access"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Access"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(TcHmiSrv.Core.Alarm)">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Alarm"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Alarm"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.Byte[])">
            <summary>
            Gets the <see cref="T:System.Byte"/>s of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/>s to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(TcHmiSrv.Core.Event)">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Event"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Event"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(TcHmiSrv.Core.Message)">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Message"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Message"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(TcHmiSrv.Core.Severity)">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Severity"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.DateTime)">
            <summary>
            Gets the <see cref="T:System.DateTime"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.SetValue(System.TimeSpan)">
            <summary>
            Gets the <see cref="T:System.TimeSpan"/> of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> to set.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ChangeType(TcHmiSrv.Core.ValueType)">
            <summary>
            Changes the <see cref="P:TcHmiSrv.Core.Value.Type"/> of this <see cref="T:TcHmiSrv.Core.Value"/> to the specified <see cref="T:TcHmiSrv.Core.ValueType"/> and adjusts the containing data.
            </summary>
            <param name="type">The <see cref="T:TcHmiSrv.Core.ValueType"/> to which this <see cref="T:TcHmiSrv.Core.Value"/> is changed.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.AddOrUpdate(System.String,TcHmiSrv.Core.Value)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Value"/> with the specified key to the <see cref="T:TcHmiSrv.Core.Value"/> if the key does not already exist, or updates a <see cref="T:TcHmiSrv.Core.Value"/> in the <see cref="T:TcHmiSrv.Core.Value"/> if the key already exists.
            </summary>
            <param name="key">The <see cref="T:System.String"/> to use as the key of the <see cref="T:TcHmiSrv.Core.Value"/> to add or update.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to add or update.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.AddRange(System.Collections.Generic.IEnumerable{TcHmiSrv.Core.Value})">
            <summary>
            Adds the specified <see cref="T:TcHmiSrv.Core.Value"/>s to the end of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="values">The <see cref="T:TcHmiSrv.Core.Value"/>s that should be added to the end of the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of <see cref="T:TcHmiSrv.Core.Value"/>s from the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="index">The zero-based starting index of the range of <see cref="T:TcHmiSrv.Core.Value"/>s to remove.</param>
            <param name="count">The number of <see cref="T:TcHmiSrv.Core.Value"/>s to remove.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Boolean)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Boolean"/> value and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="other">A <see cref="T:System.Boolean"/> value to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Byte)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Byte"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Byte"/>.
            </summary>
            <param name="other">A <see cref="T:System.Byte"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.SByte)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.SByte"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.SByte"/>.
            </summary>
            <param name="other">A <see cref="T:System.SByte"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Char)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Char"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Char"/>.
            </summary>
            <param name="other">A <see cref="T:System.Char"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Decimal)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Decimal"/> value and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="other">A <see cref="T:System.Decimal"/> value to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Int16)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Int16"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Int16"/>.
            </summary>
            <param name="other">A <see cref="T:System.Int16"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.UInt16)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.UInt16"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.UInt16"/>.
            </summary>
            <param name="other">An <see cref="T:System.UInt16"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Int32)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Int32"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Int32"/>.
            </summary>
            <param name="other">An <see cref="T:System.Int32"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.UInt32)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.UInt32"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.UInt32"/>.
            </summary>
            <param name="other">An <see cref="T:System.UInt32"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Int64)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Int64"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Int64"/>.
            </summary>
            <param name="other">A <see cref="T:System.Int64"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.UInt64)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.UInt64"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.UInt64"/>.
            </summary>
            <param name="other">An <see cref="T:System.UInt64"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Single)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Single"/>-precision floating-point number and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Single"/>-precision floating-point number.
            </summary>
            <param name="other">A <see cref="T:System.Single"/>-precision floating-point number to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Double)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.Double"/>-precision floating-point number and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Double"/>-precision floating-point number.
            </summary>
            <param name="other">A <see cref="T:System.Double"/>-precision floating-point number to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.String)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.String"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.String"/>.
            </summary>
            <param name="other">A <see cref="T:System.String"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(TcHmiSrv.Core.Access)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:TcHmiSrv.Core.Access"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Access"/>.
            </summary>
            <param name="other">An <see cref="T:TcHmiSrv.Core.Access"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(TcHmiSrv.Core.Alarm)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:TcHmiSrv.Core.Alarm"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="other">An <see cref="T:TcHmiSrv.Core.Alarm"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.Byte[])">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with other <see cref="T:System.Byte"/>s and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.Byte"/>s.
            </summary>
            <param name="other">An <see cref="T:System.Array"/> of <see cref="T:System.Byte"/>s to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(TcHmiSrv.Core.Event)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:TcHmiSrv.Core.Event"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="other">An <see cref="T:TcHmiSrv.Core.Event"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(TcHmiSrv.Core.Message)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:TcHmiSrv.Core.Message"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="other">A <see cref="T:TcHmiSrv.Core.Message"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(TcHmiSrv.Core.Severity)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:TcHmiSrv.Core.Severity"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Severity"/>.
            </summary>
            <param name="other">A <see cref="T:TcHmiSrv.Core.Severity"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.DateTime)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.DateTime"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.DateTime"/>.
            </summary>
            <param name="other">A <see cref="T:System.DateTime"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CompareTo(System.TimeSpan)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Value"/> with another <see cref="T:System.TimeSpan"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="other">A <see cref="T:System.TimeSpan"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Value"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Value"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Value.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the <see cref="T:TcHmiSrv.Core.Value"/>s in the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:TcHmiSrv.Core.Value"/> with the specified key.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Value"/> to get or set.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Value"/> with the specified key.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Add(System.String,TcHmiSrv.Core.Value)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Value"/> with the specified key to the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Value"/> to add.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to add.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Add(System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Value})">
            <summary>
            Adds a <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to add to the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Contains(System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Value})">
            <summary>
            Determines whether the <see cref="T:TcHmiSrv.Core.Value"/> contains the specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </summary>
            <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to locate in the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if <paramref name="item"/> is found in the <see cref="T:TcHmiSrv.Core.Value"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:TcHmiSrv.Core.Value"/> contains a <see cref="T:TcHmiSrv.Core.Value"/> with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the <see cref="T:TcHmiSrv.Core.Value"/> contains a <see cref="T:TcHmiSrv.Core.Value"/> with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CopyTo(System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Value}[],System.Int32)">
            <summary>
            Copies the <see cref="T:System.Collections.Generic.KeyValuePair`2"/>s of the <see cref="T:TcHmiSrv.Core.Value"/> to the specified <see cref="T:System.Array"/>, starting at the specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the <see cref="T:System.Collections.Generic.KeyValuePair`2"/>s copied from the <see cref="T:TcHmiSrv.Core.Value"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Remove(System.String)">
            <summary>
            Removes the <see cref="T:TcHmiSrv.Core.Value"/> with the specified key from the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Value"/> to remove.</param>
            <returns>true if the <see cref="T:TcHmiSrv.Core.Value"/> is successfully removed; otherwise, false. This method also returns false if <paramref name="key"/> was not found in the original <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Remove(System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Value})">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/> from the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to remove from the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if <paramref name="item"/> is successfully removed from the <see cref="T:TcHmiSrv.Core.Value"/>; otherwise, false. This method also returns false if <paramref name="item"/> was not found in the original <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.TryGetValue(System.String,TcHmiSrv.Core.Value@)">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Value"/> associated with the specified key.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Value"/> to get.</param>
            <param name="value">When this method returns, the <see cref="T:TcHmiSrv.Core.Value"/> associated with the specified key, if the key is found; otherwise, the default <see cref="T:TcHmiSrv.Core.Value"/> for the type of the <paramref name="value"/>. This parameter is passed uninitialized.</param>
            <returns>true if the <see cref="T:TcHmiSrv.Core.Value"/> contains a <see cref="T:TcHmiSrv.Core.Value"/> with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Boolean)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="other">A <see cref="T:System.Boolean"/> value to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Boolean"/> value; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Byte)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Byte"/>.
            </summary>
            <param name="other">A <see cref="T:System.Byte"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Byte"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.SByte)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.SByte"/>.
            </summary>
            <param name="other">A <see cref="T:System.SByte"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.SByte"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Char)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Char"/>.
            </summary>
            <param name="other">A <see cref="T:System.Char"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Char"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Decimal)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="other">A <see cref="T:System.Decimal"/> value to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Decimal"/> value; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Int16)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Int16"/>.
            </summary>
            <param name="other">A <see cref="T:System.Int16"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Int16"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.UInt16)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.UInt16"/>.
            </summary>
            <param name="other">An <see cref="T:System.UInt16"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.UInt16"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Int32)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Int32"/>.
            </summary>
            <param name="other">An <see cref="T:System.Int32"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Int32"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.UInt32)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.UInt32"/>.
            </summary>
            <param name="other">An <see cref="T:System.UInt32"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.UInt32"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Int64)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Int64"/>.
            </summary>
            <param name="other">A <see cref="T:System.Int64"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Int64"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.UInt64)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.UInt64"/>.
            </summary>
            <param name="other">An <see cref="T:System.UInt64"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.UInt64"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Single)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Single"/>-precision floating-point number.
            </summary>
            <param name="other">A <see cref="T:System.Single"/>-precision floating-point number to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Single"/>-precision floating-point number; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Double)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Double"/>-precision floating-point number.
            </summary>
            <param name="other">A <see cref="T:System.Double"/>-precision floating-point number to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Double"/>-precision floating-point number; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.String)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.String"/>.
            </summary>
            <param name="other">A <see cref="T:System.String"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.String"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(TcHmiSrv.Core.Access)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:TcHmiSrv.Core.Access"/>.
            </summary>
            <param name="other">An <see cref="T:TcHmiSrv.Core.Access"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:TcHmiSrv.Core.Access"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(TcHmiSrv.Core.Alarm)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="other">An <see cref="T:TcHmiSrv.Core.Alarm"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:TcHmiSrv.Core.Alarm"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.Byte[])">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.Array"/> of <see cref="T:System.Byte"/>s.
            </summary>
            <param name="other">An <see cref="T:System.Array"/> of <see cref="T:System.Byte"/>s to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.Array"/> of <see cref="T:System.Byte"/>s; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(TcHmiSrv.Core.Event)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="other">An <see cref="T:TcHmiSrv.Core.Event"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:TcHmiSrv.Core.Event"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(TcHmiSrv.Core.Message)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="other">An <see cref="T:TcHmiSrv.Core.Message"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:TcHmiSrv.Core.Message"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(TcHmiSrv.Core.Severity)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:TcHmiSrv.Core.Severity"/>.
            </summary>
            <param name="other">A <see cref="T:TcHmiSrv.Core.Severity"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:TcHmiSrv.Core.Severity"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.DateTime)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.DateTime"/>.
            </summary>
            <param name="other">A <see cref="T:System.DateTime"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.DateTime"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Equals(System.TimeSpan)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to another <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="other">A <see cref="T:System.TimeSpan"/> to compare with this <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Value"/> is equal to the other <see cref="T:System.TimeSpan"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Value.Count">
            <summary>
            Gets the number of <see cref="T:TcHmiSrv.Core.Value"/>s contained in the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.IsReadOnly">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Value"/> is read-only.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Value.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:TcHmiSrv.Core.Value"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:TcHmiSrv.Core.Value"/> to get or set.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Value"/> at the specified index.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Clear">
            <summary>
            Removes all <see cref="T:TcHmiSrv.Core.Value"/>s from the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Value.System#Collections#Generic#IList{TcHmiSrv#Core#Value}#IndexOf(TcHmiSrv.Core.Value)">
            <summary>
            Determines the index of the specified <see cref="T:TcHmiSrv.Core.Value"/> in the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Value"/> to locate in the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>The index of <paramref name="item"/> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.IndexOf(TcHmiSrv.Core.Value)">
            <summary>
            Determines the index of the specified <see cref="T:TcHmiSrv.Core.Value"/> in the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Value"/> to locate in the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>The index of <paramref name="item"/> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Insert(System.Int32,TcHmiSrv.Core.Value)">
            <summary>
            Inserts a <see cref="T:TcHmiSrv.Core.Value"/> to the <see cref="T:TcHmiSrv.Core.Value"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Value"/> to insert into the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:TcHmiSrv.Core.Value"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:TcHmiSrv.Core.Value"/> to remove.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Add(TcHmiSrv.Core.Value)">
            <summary>
            Adds the specified <see cref="T:TcHmiSrv.Core.Value"/> to the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Value"/> to add to the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Contains(TcHmiSrv.Core.Value)">
            <summary>
            Determines whether the <see cref="T:TcHmiSrv.Core.Value"/> contains the specified <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Value"/> to locate in the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if <paramref name="item"/> is found in the <see cref="T:TcHmiSrv.Core.Value"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Value.CopyTo(TcHmiSrv.Core.Value[],System.Int32)">
            <summary>
            Copies the <see cref="T:TcHmiSrv.Core.Value"/>s of the <see cref="T:TcHmiSrv.Core.Value"/> to the specified <see cref="T:System.Array"/>, starting at the specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the <see cref="T:TcHmiSrv.Core.Value"/>s copied from the <see cref="T:TcHmiSrv.Core.Value"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Value.Remove(TcHmiSrv.Core.Value)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:TcHmiSrv.Core.Value"/> from the <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Value"/> to remove from the <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>true if <paramref name="item"/> is successfully removed from the <see cref="T:TcHmiSrv.Core.Value"/>; otherwise, false. This method also returns false if <paramref name="item"/> was not found in the original <see cref="T:TcHmiSrv.Core.Value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Alarm">
            <summary>
            Represents an alarm.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.CompareTo(TcHmiSrv.Core.Alarm)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Alarm"/> with another <see cref="T:TcHmiSrv.Core.Alarm"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Alarm"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Alarm"/> to compare with this <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Alarm"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Alarm"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Alarm"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <returns>A new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Alarm"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.ShallowCopy">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Alarm"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Alarm"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Alarm"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.Equals(TcHmiSrv.Core.Alarm)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Alarm"/> is equal to another <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Alarm"/> to compare with this <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Alarm"/> is equal to the other <see cref="T:TcHmiSrv.Core.Alarm"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Alarm"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Alarm"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.#ctor(TcHmiSrv.Core.Context,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Alarm"/> class with the specified <see cref="T:TcHmiSrv.Core.Context"/> and name.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.op_Equality(TcHmiSrv.Core.Alarm,TcHmiSrv.Core.Alarm)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Alarm"/> class are equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <returns>true if <paramref name="current"/> equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.op_Inequality(TcHmiSrv.Core.Alarm,TcHmiSrv.Core.Alarm)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Alarm"/> class are not equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <returns>true if <paramref name="current"/> does not equal <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.op_LessThan(TcHmiSrv.Core.Alarm,TcHmiSrv.Core.Alarm)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Alarm"/> class is less than another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <returns>true if <paramref name="current"/> is less than <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.op_GreaterThan(TcHmiSrv.Core.Alarm,TcHmiSrv.Core.Alarm)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Alarm"/> class is greater than another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <returns>true if <paramref name="current"/> is greater than <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.op_LessThanOrEqual(TcHmiSrv.Core.Alarm,TcHmiSrv.Core.Alarm)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Alarm"/> class is less than or equal to another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <returns>true if <paramref name="current"/> is less than or equal to <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.op_GreaterThanOrEqual(TcHmiSrv.Core.Alarm,TcHmiSrv.Core.Alarm)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Alarm"/> class is greater than or equal to another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Alarm"/> to compare.</param>
            <returns>true if <paramref name="current"/> is greater than or equal to <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Alarm"/> is set.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.Id">
            <summary>
            Contains the unique identifier of the <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.Severity">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.TimeRaised">
            <summary>
            Contains the <see cref="T:System.DateTime"/> when the <see cref="T:TcHmiSrv.Core.Alarm"/> was raised.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.TimeCleared">
            <summary>
            Contains the <see cref="T:System.DateTime"/> when the <see cref="T:TcHmiSrv.Core.Alarm"/> was cleared.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.TimeConfirmed">
            <summary>
            Contains the <see cref="T:System.DateTime"/> when the <see cref="T:TcHmiSrv.Core.Alarm"/> was confirmed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.AlarmState">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.AlarmState"/> of the <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.ConfirmationState">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.AlarmConfirmationState"/> of the <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.Domain">
            <summary>
            Contains the domain of the <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.Name">
            <summary>
            Contains the name of the language variable.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.Parameters">
            <summary>
            Gets the parameters of the localizable object. The names of the parameters must match the placeholders in the localization string.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Alarm.Type">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ValueType"/> of the localizable object that will be <see cref="F:TcHmiSrv.Core.ValueType.Alarm"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.Alarm.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the <see cref="P:TcHmiSrv.Core.Alarm.Name"/> of the current <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the <see cref="P:TcHmiSrv.Core.Alarm.Name"/> of the current <see cref="T:TcHmiSrv.Core.Alarm"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Event">
            <summary>
            Represents an event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Event.CompareTo(TcHmiSrv.Core.Event)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Event"/> with another <see cref="T:TcHmiSrv.Core.Event"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Event"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Event"/> to compare with this <see cref="T:TcHmiSrv.Core.Event"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Event"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Event"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Event"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <returns>A new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Event"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.ShallowCopy">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Event"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Event"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Event"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.Equals(TcHmiSrv.Core.Event)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Event"/> is equal to another <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Event"/> to compare with this <see cref="T:TcHmiSrv.Core.Event"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Event"/> is equal to the other <see cref="T:TcHmiSrv.Core.Event"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Event"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Event"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Event"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Event.#ctor(TcHmiSrv.Core.Context,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Event"/> class with the specified <see cref="T:TcHmiSrv.Core.Context"/> and name.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Event"/>.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Event"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Event.op_Equality(TcHmiSrv.Core.Event,TcHmiSrv.Core.Event)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Event"/> class are equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <returns>true if <paramref name="current"/> equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.op_Inequality(TcHmiSrv.Core.Event,TcHmiSrv.Core.Event)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Event"/> class are not equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <returns>true if <paramref name="current"/> does not equal <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.op_LessThan(TcHmiSrv.Core.Event,TcHmiSrv.Core.Event)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Event"/> class is less than another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <returns>true if <paramref name="current"/> is less than <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.op_GreaterThan(TcHmiSrv.Core.Event,TcHmiSrv.Core.Event)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Event"/> class is greater than another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <returns>true if <paramref name="current"/> is greater than <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.op_LessThanOrEqual(TcHmiSrv.Core.Event,TcHmiSrv.Core.Event)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Event"/> class is less than or equal to another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <returns>true if <paramref name="current"/> is less than or equal to <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Event.op_GreaterThanOrEqual(TcHmiSrv.Core.Event,TcHmiSrv.Core.Event)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Event"/> class is greater than or equal to another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Event"/> to compare.</param>
            <returns>true if <paramref name="current"/> is greater than or equal to <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Event.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Event"/> is set.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Event.TimeReceived">
            <summary>
            Contains the <see cref="T:System.DateTime"/> when the <see cref="T:TcHmiSrv.Core.Event"/> was received.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Event.Session">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Session"/> of the <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Event.Payload">
            <summary>
            Contains the payload of the <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Event.Name">
            <summary>
            Contains the name of the <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Event.Domain">
            <summary>
            Contains the domain of the <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Event.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.Event.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the <see cref="P:TcHmiSrv.Core.Event.Name"/> of the current <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the <see cref="P:TcHmiSrv.Core.Event.Name"/> of the current <see cref="T:TcHmiSrv.Core.Event"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Message">
            <summary>
            Represents a message
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Message.CompareTo(TcHmiSrv.Core.Message)">
            <summary>
            Compares the current <see cref="T:TcHmiSrv.Core.Message"/> with another <see cref="T:TcHmiSrv.Core.Message"/> and returns an integer that indicates whether the current <see cref="T:TcHmiSrv.Core.Message"/> precedes, follows, or occurs in the same position in the sort order as the other <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Message"/> to compare with this <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <returns>A value that is less than zero if the current <see cref="T:TcHmiSrv.Core.Message"/> precedes <paramref name="other"/> in the sort order, zero if the current <see cref="T:TcHmiSrv.Core.Message"/> occurs in the same position in the sort other as <paramref name="other"/> or greater than zero if the current <see cref="T:TcHmiSrv.Core.Message"/> follows <paramref name="other"/> in the sort order.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <returns>A new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Message"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.ShallowCopy">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Message"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Message"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Message"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.Equals(TcHmiSrv.Core.Message)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Message"/> is equal to another <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Message"/> to compare with this <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Message"/> is equal to the other <see cref="T:TcHmiSrv.Core.Message"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Message"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Message"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Message.#ctor(TcHmiSrv.Core.Context,TcHmiSrv.Core.Severity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Message"/> class with the specified parameters.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Message.op_Equality(TcHmiSrv.Core.Message,TcHmiSrv.Core.Message)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Message"/> class are equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <returns>true if <paramref name="current"/> equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.op_Inequality(TcHmiSrv.Core.Message,TcHmiSrv.Core.Message)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Message"/> class are not equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <returns>true if <paramref name="current"/> does not equal <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.op_LessThan(TcHmiSrv.Core.Message,TcHmiSrv.Core.Message)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Message"/> class is less than another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <returns>true if <paramref name="current"/> is less than <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.op_GreaterThan(TcHmiSrv.Core.Message,TcHmiSrv.Core.Message)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Message"/> class is greater than another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <returns>true if <paramref name="current"/> is greater than <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.op_LessThanOrEqual(TcHmiSrv.Core.Message,TcHmiSrv.Core.Message)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Message"/> class is less than or equal to another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <returns>true if <paramref name="current"/> is less than or equal to <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Message.op_GreaterThanOrEqual(TcHmiSrv.Core.Message,TcHmiSrv.Core.Message)">
            <summary>
            Determines whether the current instance of the <see cref="T:TcHmiSrv.Core.Message"/> class is greater than or equal to another instance.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Message"/> to compare.</param>
            <returns>true if <paramref name="current"/> is greater than or equal to <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Message.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Message"/> is set.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Message.TimeRaised">
            <summary>
            Contains the <see cref="T:System.DateTime"/> when the <see cref="T:TcHmiSrv.Core.Message"/> was raised.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Message.Severity">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Message.Domain">
            <summary>
            Contains the domain of the <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Message.Name">
            <summary>
            Contains the name of the language variable.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Message.Parameters">
            <summary>
            Gets the parameters of the localizable object. The names of the parameters must match the placeholders in the localization string.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Message.Type">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ValueType"/> of the localizable object that will be <see cref="F:TcHmiSrv.Core.ValueType.Message"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Message.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the <see cref="P:TcHmiSrv.Core.Message.Name"/> of the current <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the <see cref="P:TcHmiSrv.Core.Message.Name"/> of the current <see cref="T:TcHmiSrv.Core.Message"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Command">
            <summary>
            Represents a command to execute a symbol of the TwinCAT HMI server or a TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Command.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <returns>A new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Command"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Command.ShallowCopy">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Command"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Command"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Command"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Command.Equals(TcHmiSrv.Core.Command)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Command"/> is equal to another <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Command"/> to compare with this <see cref="T:TcHmiSrv.Core.Command"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Command"/> is equal to the other <see cref="T:TcHmiSrv.Core.Command"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Command.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Command"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Command"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Command.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Command"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Command.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Command"/> class with the specified name.
            </summary>
            <param name="name">The name of the symbol of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Command.op_Equality(TcHmiSrv.Core.Command,TcHmiSrv.Core.Command)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Command"/> class are equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Command"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Command"/> to compare.</param>
            <returns>true if <paramref name="current"/> equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Command.op_Inequality(TcHmiSrv.Core.Command,TcHmiSrv.Core.Command)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Command"/> class are not equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Command"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Command"/> to compare.</param>
            <returns>true if <paramref name="current"/> does not equal <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Name">
            <summary>
            Contains the name of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Mapping">
            <summary>
            Gets the mapping of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Domain">
            <summary>
            Gets the domain of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Options">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.CommandOption"/>s of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Result">
            <summary>
            Gets the result of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.ExtensionResult">
            <summary>
            Contains the extension result of the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.ResultString">
            <summary>
            Contains the result <see cref="T:System.String"/> of the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.ReadValue">
            <summary>
            Contains the read value of the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.WriteValue">
            <summary>
            Contains the write value of the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.HasSymbolOptions">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Command"/> has symbol options.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.SymbolOptions">
            <summary>
            Gets the options of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.HasPaging">
            <summary>
            Gets a value that indicates whether the result will be filtered.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Paging">
            <summary>
            Gets the filter of the symbol used by this <see cref="T:TcHmiSrv.Core.Command"/>. Filters can be used to set rules for reducing the size of returned <see cref="T:TcHmiSrv.Core.Value"/>s of type <see cref="F:TcHmiSrv.Core.ValueType.Vector"/> or <see cref="F:TcHmiSrv.Core.ValueType.Map"/>. If your TwinCAT HMI server extension handles the filtering or paging itself set <see cref="F:TcHmiSrv.Core.CommandOption.PagingHandled"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.CustomerData">
            <summary>
            Contains the customer data associated with this <see cref="T:TcHmiSrv.Core.Command"/>. This can be used to identify multiple calls to the same symbol in one request.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Path">
            <summary>
            Gets the path of the <see cref="P:TcHmiSrv.Core.Command.Mapping"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Changed">
            <summary>
            Contains a value that indicates whether the <see cref="T:TcHmiSrv.Core.Command"/> has changed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Command"/> is set.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.ProcessedStart">
            <summary>
            Contains the <see cref="T:System.DateTime"/> that indicates when processing the data in this <see cref="T:TcHmiSrv.Core.Command"/> started.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.ProcessedEnd">
            <summary>
            Contains the <see cref="T:System.DateTime"/> that indicates when processing the data in this <see cref="T:TcHmiSrv.Core.Command"/> ended.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.Mapper">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ICommandMapper"/> for the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Command.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.Command.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the <see cref="P:TcHmiSrv.Core.Command.Name"/> of the current <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the <see cref="P:TcHmiSrv.Core.Command.Name"/> of the current <see cref="T:TcHmiSrv.Core.Command"/>.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#Flags">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.InternalCommandOption"/> of the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#LastSent">
            <summary>
            Contains a value that indicates when the <see cref="T:TcHmiSrv.Core.Command"/> was last sent.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#SymbolName">
            <summary>
            Contains the name of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#Hash">
            <summary>
            Contains the hash code of the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#SetPath(System.String)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Path"/>.
            </summary>
            <param name="path">The path of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#SetMapping(System.String)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Mapping"/>.
            </summary>
            <param name="mapping">The mapping of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#SetDomain(System.String)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Domain"/>.
            </summary>
            <param name="domain">The domain of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#SetResult(TcHmiSrv.Core.ErrorValue)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Result"/>.
            </summary>
            <param name="result">The result of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#SetSymbolOptions(TcHmiSrv.Core.Value)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.SymbolOptions"/>.
            </summary>
            <param name="options">The symbol options of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#SetPaging(TcHmiSrv.Core.Value)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Paging"/>.
            </summary>
            <param name="paging">The filter of the symbol used by the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Command.TcHmiSrv#Core#ICommandMapper#Unset">
            <summary>
            Sets <see cref="P:TcHmiSrv.Core.Command.IsSet"/> to false.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Command.TcHmiSrv#Core#Substitution#IExchangeable{TcHmiSrv#Core#Command}#Exchange(TcHmiSrv.Core.Command)">
            <summary>
            Exchanges the values of the current <see cref="T:TcHmiSrv.Core.Command"/> with the values of the other <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="other">A <see cref="T:TcHmiSrv.Core.Command"/> to be exchanged with the current <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="T:TcHmiSrv.Core.CommandGroup">
            <summary>
            Represents a group of <see cref="T:TcHmiSrv.Core.Command"/>s.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <returns>A new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.ShallowCopy">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.CommandGroup"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.CommandGroup"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.Equals(TcHmiSrv.Core.CommandGroup)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.CommandGroup"/> is equal to another <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.CommandGroup"/> to compare with this <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.CommandGroup"/> is equal to the other <see cref="T:TcHmiSrv.Core.CommandGroup"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.Capacity">
            <summary>
            Contains the total number of <see cref="T:TcHmiSrv.Core.Command"/>s the internal data structure can hold without resizing.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.#ctor(TcHmiSrv.Core.CommandGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class with the specified <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="commands">A <see cref="T:TcHmiSrv.Core.CommandGroup"/> that is used to initialize the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class with the specified domain.
            </summary>
            <param name="domain">The domain of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.#ctor(System.Collections.Generic.IList{TcHmiSrv.Core.Command})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class with the specified <see cref="T:TcHmiSrv.Core.Command"/>s.
            </summary>
            <param name="commands">The <see cref="T:TcHmiSrv.Core.Command"/>s of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.#ctor(System.Collections.Generic.IEnumerable{TcHmiSrv.Core.Command})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class with the specified <see cref="T:TcHmiSrv.Core.Command"/>s.
            </summary>
            <param name="commands">The <see cref="T:TcHmiSrv.Core.Command"/>s of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.#ctor(System.String,System.Collections.Generic.IList{TcHmiSrv.Core.Command})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class with the specified domain and <see cref="T:TcHmiSrv.Core.Command"/>s.
            </summary>
            <param name="domain">The domain of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <param name="commands">The <see cref="T:TcHmiSrv.Core.Command"/>s of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{TcHmiSrv.Core.Command})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class with the specified domain and <see cref="T:TcHmiSrv.Core.Command"/>s.
            </summary>
            <param name="domain">The domain of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <param name="commands">The <see cref="T:TcHmiSrv.Core.Command"/>s of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.op_Equality(TcHmiSrv.Core.CommandGroup,TcHmiSrv.Core.CommandGroup)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class are equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.CommandGroup"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.CommandGroup"/> to compare.</param>
            <returns>true if <paramref name="current"/> equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.op_Inequality(TcHmiSrv.Core.CommandGroup,TcHmiSrv.Core.CommandGroup)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class are not equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.CommandGroup"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.CommandGroup"/> to compare.</param>
            <returns>true if <paramref name="current"/> does not equal <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.Domain">
            <summary>
            Contains the domain of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.Result">
            <summary>
            Contains the result of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.IsEmpty">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.CommandGroup"/> is empty.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.CommandGroup"/> is set.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.AddRange(System.Collections.Generic.IEnumerable{TcHmiSrv.Core.Command})">
            <summary>
            Adds the specified <see cref="T:TcHmiSrv.Core.Command"/>s to the end of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="commands">The <see cref="T:TcHmiSrv.Core.Command"/>s that should be added to the end of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of <see cref="T:TcHmiSrv.Core.Command"/>s from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="index">The zero-based starting index of the range of <see cref="T:TcHmiSrv.Core.Command"/>s to remove.</param>
            <param name="count">The number of <see cref="T:TcHmiSrv.Core.Command"/>s to remove.</param>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.Count">
            <summary>
            Gets the number of <see cref="T:TcHmiSrv.Core.Command"/>s contained in the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.TcHmiSrv#Core#ICommandGroupMapper#ChangeState">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.MapperChangeState"/> of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.TcHmiSrv#Core#ICommandGroupMapper#Flags">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.CommandGroupFlags"/> of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.TcHmiSrv#Core#ICommandGroupMapper#Unset">
            <summary>
            Sets <see cref="P:TcHmiSrv.Core.CommandGroup.IsSet"/> to false.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.TcHmiSrv#Core#Substitution#IExchangeable{TcHmiSrv#Core#CommandGroup}#Exchange(TcHmiSrv.Core.CommandGroup)">
            <summary>
            Exchanges the values of the current <see cref="T:TcHmiSrv.Core.CommandGroup"/> with the values of the other <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="other">A <see cref="T:TcHmiSrv.Core.CommandGroup"/> to be exchanged with the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.IsReadOnly">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.CommandGroup"/> is read-only.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.CommandGroup.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:TcHmiSrv.Core.Command"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:TcHmiSrv.Core.Command"/> to get or set.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Command"/> at the specified index.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.IndexOf(TcHmiSrv.Core.Command)">
            <summary>
            Determines the index of the specified <see cref="T:TcHmiSrv.Core.Command"/> in the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Command"/> to locate in the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <returns>The index of <paramref name="item"/> if found in the <see cref="T:TcHmiSrv.Core.CommandGroup"/>; otherwise, -1.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.Insert(System.Int32,TcHmiSrv.Core.Command)">
            <summary>
            Inserts a <see cref="T:TcHmiSrv.Core.Command"/> to the <see cref="T:TcHmiSrv.Core.CommandGroup"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">A <see cref="T:TcHmiSrv.Core.Command"/> to insert to the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:TcHmiSrv.Core.Command"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:TcHmiSrv.Core.Command"/> to remove.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.Add(TcHmiSrv.Core.Command)">
            <summary>
            Add the specified <see cref="T:TcHmiSrv.Core.Command"/> to the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Command"/> to add to the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.Clear">
            <summary>
            Removes all <see cref="T:TcHmiSrv.Core.Command"/>s from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.System#Collections#Generic#ICollection{TcHmiSrv#Core#Command}#Contains(TcHmiSrv.Core.Command)">
            <summary>
            Determines whether the <see cref="T:TcHmiSrv.Core.CommandGroup"/> contains the specified <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Command"/> to locate in the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <returns>true if <paramref name="item"/> is found in the <see cref="T:TcHmiSrv.Core.CommandGroup"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.Contains(TcHmiSrv.Core.Command)">
            <summary>
            Determines whether the <see cref="T:TcHmiSrv.Core.CommandGroup"/> contains the specified <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Command"/> to locate in the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <returns>true if <paramref name="item"/> is found in the <see cref="T:TcHmiSrv.Core.CommandGroup"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.CopyTo(TcHmiSrv.Core.Command[],System.Int32)">
            <summary>
            Copies the <see cref="T:TcHmiSrv.Core.Command"/>s of the <see cref="T:TcHmiSrv.Core.CommandGroup"/> to the specified <see cref="T:System.Array"/>, starting at the specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the <see cref="T:TcHmiSrv.Core.Command"/>s copied from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.System#Collections#Generic#ICollection{TcHmiSrv#Core#Command}#Remove(TcHmiSrv.Core.Command)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:TcHmiSrv.Core.Command"/> from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Command"/> to remove from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <returns>true if <paramref name="item"/> was successfully removed from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.Remove(TcHmiSrv.Core.Command)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:TcHmiSrv.Core.Command"/> from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="item">The <see cref="T:TcHmiSrv.Core.Command"/> to remove from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <returns>true if <paramref name="item"/> was successfully removed from the <see cref="T:TcHmiSrv.Core.CommandGroup"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates through the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.CommandGroup.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates through the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Context">
            <summary>
            Represents the context of an invoked method or symbol.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Context.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
            <returns>A new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Context"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Context.ShallowCopy">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Context"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Context"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Context"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Context.Equals(TcHmiSrv.Core.Context)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Context"/> is equal to another <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Context"/> to compare with this <see cref="T:TcHmiSrv.Core.Context"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Context"/> is equal to the other <see cref="T:TcHmiSrv.Core.Context"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Context.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Context"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Context"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Context.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Context"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Context.op_Equality(TcHmiSrv.Core.Context,TcHmiSrv.Core.Context)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Context"/> class are equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Context"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Context"/> to compare.</param>
            <returns>true if <paramref name="current"/> equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Context.op_Inequality(TcHmiSrv.Core.Context,TcHmiSrv.Core.Context)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Context"/> class are not equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Context"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Context"/> to compare.</param>
            <returns>true if <paramref name="current"/> does not equal <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Context.Session">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Session"/> of the active user.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Context.RequestType">
            <summary>
            Contains the type of the request that is currently being executed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Context.Domain">
            <summary>
            Contains the currently active domain.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Context.Hash">
            <summary>
            Contains a hash value that uniquely identifies the <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Context.SubscriptionId">
            <summary>
            Contains an identifier to uniquely identify a subscription.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Context.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.ResultPair.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:TcHmiSrv.Core.Session">
            <summary>
            Represents a session that contains information about an active user.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Session.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
            <returns>A new object that is a deep copy of the current <see cref="T:TcHmiSrv.Core.Session"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Session.ShallowCopy">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Session"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Session"/> that is a shallow copy of the current <see cref="T:TcHmiSrv.Core.Session"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Session.Equals(TcHmiSrv.Core.Session)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Session"/> is equal to another <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Session"/> to compare with this <see cref="T:TcHmiSrv.Core.Session"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Session"/> is equal to the other <see cref="T:TcHmiSrv.Core.Session"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Session.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Session"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Session"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Session.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Session"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Session.op_Equality(TcHmiSrv.Core.Session,TcHmiSrv.Core.Session)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Session"/> class are equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Session"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Session"/> to compare.</param>
            <returns>true if <paramref name="current"/> equals <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Session.op_Inequality(TcHmiSrv.Core.Session,TcHmiSrv.Core.Session)">
            <summary>
            Determines whether two instances of the <see cref="T:TcHmiSrv.Core.Session"/> class are not equal.
            </summary>
            <param name="current">The first <see cref="T:TcHmiSrv.Core.Session"/> to compare.</param>
            <param name="other">The second <see cref="T:TcHmiSrv.Core.Session"/> to compare.</param>
            <returns>true if <paramref name="current"/> does not equal <paramref name="other"/>; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Session.Id">
            <summary>
            Contains the identifier of the <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Session.User">
            <summary>
            Contains the name of the active user.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Session.Locale">
            <summary>
            Contains the locale of the active user in BCP 47 representation.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Session.SocketId">
            <summary>
            Contains the numeric identifier of the WebSocket of the <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Session.EndpointInfo">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.EndpointInfo"/> the <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Session.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.AlarmExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Alarm"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.AlarmExtensions.ToJson(TcHmiSrv.Core.Alarm,System.Boolean,System.Boolean)">
            <summary>
            Returns a JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Alarm"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.AlarmExtensions.ToJson(TcHmiSrv.Core.Alarm,System.Boolean)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Alarm"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.AlarmExtensions.ToJson(TcHmiSrv.Core.Alarm)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Alarm"/> to convert into an unformatted JSON <see cref="T:System.String"/>.</param>
            <returns>An unformatted JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.AlarmExtensions.FromJson(System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Alarm"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Alarm"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.AlarmExtensions.FromJson(System.String)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Alarm"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Alarm"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.CommandExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Command"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandExtensions.ToJson(TcHmiSrv.Core.Command,System.Boolean,System.Boolean)">
            <summary>
            Returns a JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Command"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandExtensions.ToJson(TcHmiSrv.Core.Command,System.Boolean)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Command"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandExtensions.ToJson(TcHmiSrv.Core.Command)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Command"/> to convert into an unformatted JSON <see cref="T:System.String"/>.</param>
            <returns>An unformatted JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandExtensions.FromJson(System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Command"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Command"/>.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Command"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandExtensions.FromJson(System.String)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Command"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Command"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Command"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.CommandGroupExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.CommandGroup"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandGroupExtensions.ToJson(TcHmiSrv.Core.CommandGroup,System.Boolean,System.Boolean)">
            <summary>
            Returns a JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.CommandGroup"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandGroupExtensions.ToJson(TcHmiSrv.Core.CommandGroup,System.Boolean)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.CommandGroup"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandGroupExtensions.ToJson(TcHmiSrv.Core.CommandGroup)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.CommandGroup"/> to convert into an unformatted JSON <see cref="T:System.String"/>.</param>
            <returns>An unformatted JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandGroupExtensions.FromJson(System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.CommandGroup"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.CommandGroup"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.CommandGroupExtensions.FromJson(System.String)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.CommandGroup"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.CommandGroup"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.CommandGroup"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.ContextExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Context"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ContextExtensions.ToJson(TcHmiSrv.Core.Context,System.Boolean)">
            <summary>
            Returns a JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Context"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ContextExtensions.ToJson(TcHmiSrv.Core.Context)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Context"/> to convert into an unformatted JSON <see cref="T:System.String"/>.</param>
            <returns>An unformatted JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ContextExtensions.FromJson(System.String)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Context"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Context"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Context"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.EventExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Event"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.EventExtensions.ToJson(TcHmiSrv.Core.Event,System.Boolean,System.Boolean)">
            <summary>
            Returns a JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Event"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.EventExtensions.ToJson(TcHmiSrv.Core.Event,System.Boolean)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Event"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.EventExtensions.ToJson(TcHmiSrv.Core.Event)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Event"/> to convert into an unformatted JSON <see cref="T:System.String"/>.</param>
            <returns>An unformatted JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.EventExtensions.FromJson(System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Event"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Event"/>.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Event"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.EventExtensions.FromJson(System.String)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Event"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Event"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Event"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.MessageExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Message"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.MessageExtensions.ToJson(TcHmiSrv.Core.Message,System.Boolean,System.Boolean)">
            <summary>
            Returns a JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Message"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.MessageExtensions.ToJson(TcHmiSrv.Core.Message,System.Boolean)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Message"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.MessageExtensions.ToJson(TcHmiSrv.Core.Message)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Message"/> to convert into an unformatted JSON <see cref="T:System.String"/>.</param>
            <returns>An unformatted JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.MessageExtensions.FromJson(System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Message"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Message"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.MessageExtensions.FromJson(System.String)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Message"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Message"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.SessionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Session"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.SessionExtensions.ToJson(TcHmiSrv.Core.Session,System.Boolean)">
            <summary>
            Returns a JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Session"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.SessionExtensions.ToJson(TcHmiSrv.Core.Session)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Session"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Session"/> to convert into an unformatted JSON <see cref="T:System.String"/>.</param>
            <returns>An unformatted JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.SessionExtensions.FromJson(System.String)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Session"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Session"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Session"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions.ToJson(TcHmiSrv.Core.Value,System.Boolean,System.Boolean)">
            <summary>
            Returns a JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions.ToJson(TcHmiSrv.Core.Value,System.Boolean)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert into a JSON <see cref="T:System.String"/>.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions.ToJson(TcHmiSrv.Core.Value)">
            <summary>
            Returns an unformatted JSON <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert into an unformatted JSON <see cref="T:System.String"/>.</param>
            <returns>An unformatted JSON <see cref="T:System.String"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions.FromJson(System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Value"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions.FromJson(System.String)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Value"/> that represents the specified JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert into an instance of type <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions.ToJsonValue(TcHmiSrv.Core.Value)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/> that contains an unformatted JSON <see cref="T:System.String"/> representing the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to convert.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/> that contains an unformatted JSON <see cref="T:System.String"/> representing <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Extensions.NamespaceDoc">
            <summary>
            Provides extension methods for the core types of the TwinCAT HMI server extension API to convert them to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.JsonValue">
            <summary>
            Represents an immutable <see cref="T:TcHmiSrv.Core.Value"/> containing JSON.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.JsonValue.ToValue">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Value"/> that represents the current <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/>.
            </summary>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents the current <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.JsonValue.Equals(TcHmiSrv.Core.Tools.Json.JsonValue)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/> is equal to another <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/> to compare with this <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/> is equal to the other <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.JsonValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.JsonValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.JsonValue.ToString">
            <inheritdoc/>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.NamespaceDoc">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Tools.Json.JsonValue"/> class that inherits from the <see cref="T:TcHmiSrv.Core.Value"/> class and stores a raw JSON <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.NamespaceGroupDoc">
            <summary>
            Contains types and namespaces to interact with JSON.
            </summary>
            <remarks>
            This implementation replaces the <see href="https://infosys.beckhoff.com/content/1033/te2000_tc3_hmi_engineering/5353838475.html?id=4076226145250624947">TcHmiSrv.DynamicSymbols.TcHmiSerializer</see> class.<br/>
            Instead of converting <see cref="T:System.Object"/>s directly to and from <see cref="T:TcHmiSrv.Core.Value"/>s, they're first converted into JSON <see cref="T:System.String"/>s. Despite this intermediate step, conversions can be much faster than before because, for example, the use of relatively slow operations from the <see cref="N:System.Reflection"/> namespace can be completely dispensed.<br/>
            To convert <see cref="T:System.Object"/>s to and from JSON <see cref="T:System.String"/>s, you can use the JSON API of your choice. To convert <see cref="T:TcHmiSrv.Core.Value"/>s and other types from the <see cref="N:TcHmiSrv.Core"/> namespace to and from JSON <see cref="T:System.String"/>s <see cref="N:Newtonsoft.Json" href="https://www.newtonsoft.com/json/help/html/Introduction.htm">Newtonsoft.Json</see> is used.<br/>
            This namespace contains many types that can be used with <see cref="N:Newtonsoft.Json" href="https://www.newtonsoft.com/json/help/html/Introduction.htm">Newtonsoft.Json</see> to implement a fast and reliable way to convert <see cref="T:System.Object"/>s of almost any type (including the core types of the TwinCAT HMI server extension API) to and from JSON.
            </remarks>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.AlarmJsonConverter">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see> to convert <see cref="T:TcHmiSrv.Core.Alarm"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.AlarmJsonConverter.Converter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.AlarmJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Alarm"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.AlarmJsonConverter.DefaultConverter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.AlarmJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Alarm"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.AlarmJsonConverter.AdvancedConverter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.AlarmJsonConverter"/> with advanced conversions to and from <see cref="T:TcHmiSrv.Core.Value"/> enabled to convert <see cref="T:TcHmiSrv.Core.Alarm"/>s to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandGroupJsonConverter">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see> to convert <see cref="T:TcHmiSrv.Core.CommandGroup"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandGroupJsonConverter.Converter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandGroupJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.CommandGroup"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandGroupJsonConverter.DefaultConverter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandGroupJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.CommandGroup"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandGroupJsonConverter.AdvancedConverter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandGroupJsonConverter"/> with advanced conversions to and from <see cref="T:TcHmiSrv.Core.Value"/> enabled to convert <see cref="T:TcHmiSrv.Core.CommandGroup"/>s to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandJsonConverter">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see> to convert <see cref="T:TcHmiSrv.Core.Command"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandJsonConverter.Converter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Command"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandJsonConverter.DefaultConverter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Command"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandJsonConverter.AdvancedConverter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.CommandJsonConverter"/> with advanced conversions to and from <see cref="T:TcHmiSrv.Core.Value"/> enabled to convert <see cref="T:TcHmiSrv.Core.Command"/>s to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ContextJsonConverter">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see> to convert <see cref="T:TcHmiSrv.Core.Context"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ContextJsonConverter.Converter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ContextJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Context"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ContextJsonConverter.DefaultConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ContextJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Context"/>s to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.EventJsonConverter">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see> to convert <see cref="T:TcHmiSrv.Core.Event"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.EventJsonConverter.Converter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.EventJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Event"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.EventJsonConverter.DefaultConverter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.EventJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Event"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.EventJsonConverter.AdvancedConverter">
            <summary>
            Gets an <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.EventJsonConverter"/> with advanced conversions to and from <see cref="T:TcHmiSrv.Core.Value"/> enabled to convert <see cref="T:TcHmiSrv.Core.Event"/>s to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.MessageJsonConverter">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see> to convert <see cref="T:TcHmiSrv.Core.Message"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.MessageJsonConverter.Converter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.MessageJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Value"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.MessageJsonConverter.DefaultConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.MessageJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Value"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.MessageJsonConverter.AdvancedConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.MessageJsonConverter"/> with advanced conversions to and from <see cref="T:TcHmiSrv.Core.Value"/> enabled to convert <see cref="T:TcHmiSrv.Core.Message"/>s to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.NamespaceDoc">
            <summary>
            Contains <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see>s to convert the core API types to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.SessionJsonConverter">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see> to convert <see cref="T:TcHmiSrv.Core.Session"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.SessionJsonConverter.Converter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.SessionJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Session"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.SessionJsonConverter.DefaultConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.SessionJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Session"/>s to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ValueJsonConverter">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see> to convert <see cref="T:TcHmiSrv.Core.Value"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ValueJsonConverter.Converter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ValueJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Value"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ValueJsonConverter.DefaultConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ValueJsonConverter"/> to convert <see cref="T:TcHmiSrv.Core.Value"/>s to and from JSON.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ValueJsonConverter.AdvancedConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.Converters.ValueJsonConverter"/> with advanced conversions to and from <see cref="T:TcHmiSrv.Core.Alarm"/>, <see cref="T:TcHmiSrv.Core.Event"/> and <see cref="T:TcHmiSrv.Core.Message"/> enabled to convert <see cref="T:TcHmiSrv.Core.Value"/>s to and from JSON.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.NamespaceDoc">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> to serialize instances of types from the <see cref="N:TcHmiSrv.Core"/> namespace to JSON <see cref="T:System.String"/>s and back.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.NamespaceGroupDoc">
            <summary>
            Contains types and namespaces for the core types of the TwinCAT HMI server extension API to interact with types from the <see cref="N:Newtonsoft.Json" href="https://www.newtonsoft.com/json/help/html/N_Newtonsoft_Json.htm">Newtonsoft.Json</see> namespace.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer">
            <summary>
            Provides methods to serialize instances of any type from the <see cref="N:TcHmiSrv.Core"/> namespace to JSON <see cref="T:System.String"/>s and back.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultCapacity">
            <summary>
            Contains the default capacity of <see cref="T:System.Text.StringBuilder"/>s that are used to create a JSON <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultJsonConverters">
            <summary>
            Gets a <see cref="T:Newtonsoft.Json.JsonConverterCollection" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverterCollection.htm">JsonConverterCollection</see> that contains the default <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see>s.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultAdvancedJsonConverters">
            <summary>
            Gets a <see cref="T:Newtonsoft.Json.JsonConverterCollection" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverterCollection.htm">JsonConverterCollection</see> that contains the default <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see>s with advanced conversions enabled.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.AdvancedJsonConverters">
            <summary>
            Gets a <see cref="T:Newtonsoft.Json.JsonConverterCollection" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverterCollection.htm">JsonConverterCollection</see> that contains the default <see cref="T:Newtonsoft.Json.JsonConverter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter.htm">JsonConverter</see>s with advanced conversions enabled.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings">
            <summary>
            Gets the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettingsWithConverters">
            <summary>
            Gets the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> with the <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultJsonConverters"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettingsWithDefaultConverters">
            <summary>
            Gets the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> with the <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultJsonConverters"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettingsWithAdvancedConverters">
            <summary>
            Gets the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> with the <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.AdvancedJsonConverters"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> instance using the specified <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>. The <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> will not use default settings from <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings"/>.
            </summary>
            <param name="settings">The settings to be applied to the <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/>.</param>
            <returns>A new <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> instance using <paramref name="settings"/>. The <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> will not use default settings from <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Create">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> instance. The <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> will not use default settings from <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> instance. The <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> will not use default settings from <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> instance using the specified <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>. The <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> will use default settings from <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings"/> as well as the specified <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="settings">The settings to be applied to the <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/>.</param>
            <returns>A new <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> instance using <paramref name="settings"/>. The <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> will use default settings from <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings"/> as well as the specified <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.CreateDefault">
            <summary>
            Creates a new <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> instance. The <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> will use default settings from <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings"/>.
            </summary>
            <returns>A new <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> instance. The <see cref="T:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer"/> will use default settings from <see cref="P:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.DefaultSettings"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object,System.Type,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonWriter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonWriter.htm">JsonWriter</see>, <see cref="T:System.Type"/> and <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonWriter.htm">JsonWriter</see> that is used to write the JSON <see cref="T:System.String"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value being serialized. This parameter is used when <see cref="P:Newtonsoft.Json.JsonSerializer.TypeNameHandling" href="https://www.newtonsoft.com/json/help/html/P_Newtonsoft_Json_JsonSerializer_TypeNameHandling.htm">TypeNameHandling</see> is <see cref="F:Newtonsoft.Json.TypeNameHandling.Auto" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_TypeNameHandling.htm">TypeNameHandling.Auto</see> to write out the <see cref="T:System.Type"/> name if the <see cref="T:System.Type"/> of the value does not match. Specifying the <see cref="T:System.Type"/> is optional.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to serialize <paramref name="value"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonWriter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonWriter.htm">JsonWriter</see>, <see cref="T:System.Type"/> and <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonWriter.htm">JsonWriter</see> that is used to write the JSON <see cref="T:System.String"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to serialize <paramref name="value"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonWriter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonWriter.htm">JsonWriter</see>, <see cref="T:System.Type"/> and <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonWriter.htm">JsonWriter</see> that is used to write the JSON <see cref="T:System.String"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(Newtonsoft.Json.JsonWriter,System.Object,System.Boolean)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonWriter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonWriter.htm">JsonWriter</see>, <see cref="T:System.Type"/> and <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonWriter.htm">JsonWriter</see> that is used to write the JSON <see cref="T:System.String"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(System.Int32,System.Object,System.Type,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/> using the specified capacity, <see cref="T:System.Type"/> and <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="capacity">The capacity of the <see cref="T:System.Text.StringBuilder"/> that is used to create the JSON <see cref="T:System.String"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value being serialized. This parameter is used when <see cref="P:Newtonsoft.Json.JsonSerializer.TypeNameHandling" href="https://www.newtonsoft.com/json/help/html/P_Newtonsoft_Json_JsonSerializer_TypeNameHandling.htm">TypeNameHandling</see> is <see cref="F:Newtonsoft.Json.TypeNameHandling.Auto" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_TypeNameHandling.htm">TypeNameHandling.Auto</see> to write out the <see cref="T:System.Type"/> name if the <see cref="T:System.Type"/> of the value does not match. Specifying the <see cref="T:System.Type"/> is optional.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to serialize <paramref name="value"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(System.Int32,System.Object,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/> using the specified capacity and <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="capacity">The capacity of the <see cref="T:System.Text.StringBuilder"/> that is used to create the JSON <see cref="T:System.String"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to serialize <paramref name="value"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(System.Object,System.Type,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:System.Type"/> and <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value being serialized. This parameter is used when <see cref="P:Newtonsoft.Json.JsonSerializer.TypeNameHandling" href="https://www.newtonsoft.com/json/help/html/P_Newtonsoft_Json_JsonSerializer_TypeNameHandling.htm">TypeNameHandling</see> is <see cref="F:Newtonsoft.Json.TypeNameHandling.Auto" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_TypeNameHandling.htm">TypeNameHandling.Auto</see> to write out the <see cref="T:System.Type"/> name if the <see cref="T:System.Type"/> of the value does not match. Specifying the <see cref="T:System.Type"/> is optional.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to serialize <paramref name="value"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(System.Object,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to serialize <paramref name="value"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(System.Object,System.Boolean)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> to an equivalent JSON <see cref="T:System.String"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize``1(System.Int32,Newtonsoft.Json.JsonConverter{``0},``0,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serializes the specified value to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see>.
            </summary>
            <typeparam name="T">The type of the value to convert.</typeparam>
            <param name="capacity">The capacity of the <see cref="T:System.Text.StringBuilder"/> that is used to create the JSON <see cref="T:System.String"/>.</param>
            <param name="converter">The <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see> that is used to serialize <paramref name="value"/> to an equivalent JSON <see cref="T:System.String"/></param>
            <param name="value">The value to convert.</param>
            <param name="serializer">The calling <see cref="T:Newtonsoft.Json.JsonSerializer" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializer.htm">JsonSerializer</see>.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize``1(Newtonsoft.Json.JsonConverter{``0},``0,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Serializes the specified value to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see>.
            </summary>
            <typeparam name="T">The type of the value to convert.</typeparam>
            <param name="converter">The <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see> that is used to serialize <paramref name="value"/> to an equivalent JSON <see cref="T:System.String"/></param>
            <param name="value">The value to convert.</param>
            <param name="serializer">The calling <see cref="T:Newtonsoft.Json.JsonSerializer" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializer.htm">JsonSerializer</see>.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize``1(Newtonsoft.Json.JsonConverter{``0},``0,System.Boolean)">
            <summary>
            Serializes the specified value to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see>.
            </summary>
            <typeparam name="T">The type of the value to convert.</typeparam>
            <param name="converter">The <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see> that is used to serialize <paramref name="value"/> to an equivalent JSON <see cref="T:System.String"/></param>
            <param name="value">The value to convert.</param>
            <param name="format">true to format the JSON <see cref="T:System.String"/> by indenting; otherwise, false.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Serialize``1(Newtonsoft.Json.JsonConverter{``0},``0)">
            <summary>
            Serializes the specified value to an equivalent JSON <see cref="T:System.String"/> using the specified <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see>.
            </summary>
            <typeparam name="T">The type of the value to convert.</typeparam>
            <param name="converter">The <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see> that is used to serialize <paramref name="value"/> to an equivalent JSON <see cref="T:System.String"/></param>
            <param name="value">The value to convert.</param>
            <returns>A JSON <see cref="T:System.String"/> that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON <see cref="T:System.String"/> contained by the specified <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> to an equivalent instance of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> that contains the JSON <see cref="T:System.String"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value to return.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to deserialize the specified JSON <see cref="T:System.String"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
            <returns>An <see cref="T:System.Object"/> instance that is equivalent to the JSON <see cref="T:System.String"/> contained by <paramref name="reader"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type,System.Boolean)">
            <summary>
            Deserializes the JSON <see cref="T:System.String"/> contained by the specified <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> to an equivalent instance of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> that contains the JSON <see cref="T:System.String"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value to return.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>An <see cref="T:System.Object"/> instance that is equivalent to the JSON <see cref="T:System.String"/> contained by <paramref name="reader"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize(Newtonsoft.Json.JsonReader,System.Type)">
            <summary>
            Deserializes the JSON <see cref="T:System.String"/> contained by the specified <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> to an equivalent instance of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> that contains the JSON <see cref="T:System.String"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value to return.</param>
            <returns>An <see cref="T:System.Object"/> instance that is equivalent to the JSON <see cref="T:System.String"/> contained by <paramref name="reader"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize(System.String,System.Type,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the specified JSON <see cref="T:System.String"/> to an equivalent instance of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value to return.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to deserialize <paramref name="value"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
            <returns>An <see cref="T:System.Object"/> instance that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize(System.String,System.Type,System.Boolean)">
            <summary>
            Deserializes the specified JSON <see cref="T:System.String"/> to an equivalent instance of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value to return.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>An <see cref="T:System.Object"/> instance that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes the specified JSON <see cref="T:System.String"/> to an equivalent instance of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="value">The JSON <see cref="T:System.String"/> to convert.</param>
            <param name="type">The <see cref="T:System.Type"/> of the value to return.</param>
            <returns>An <see cref="T:System.Object"/> instance that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize``1(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON <see cref="T:System.String"/> contained by the specified <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> to an equivalent instance of the specified type.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> that contains the JSON <see cref="T:System.String"/> to convert.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to deserialize the specified JSON <see cref="T:System.String"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
            <returns>An instance of the specified type that is equivalent to the JSON <see cref="T:System.String"/> contained by <paramref name="reader"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize``1(Newtonsoft.Json.JsonReader,System.Boolean)">
            <summary>
            Deserializes the JSON <see cref="T:System.String"/> contained by the specified <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> to an equivalent instance of the specified type.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> that contains the JSON <see cref="T:System.String"/> to convert.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>An instance of the specified type that is equivalent to the JSON <see cref="T:System.String"/> contained by <paramref name="reader"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize``1(Newtonsoft.Json.JsonReader)">
            <summary>
            Deserializes the JSON <see cref="T:System.String"/> contained by the specified <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> to an equivalent instance of the specified type.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReader.htm">JsonReader</see> that contains the JSON <see cref="T:System.String"/> to convert.</param>
            <returns>An instance of the specified type that is equivalent to the JSON <see cref="T:System.String"/> contained by <paramref name="reader"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the specified JSON <see cref="T:System.String"/> to an equivalent instance of the specified type.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="value">The JSON <see cref="T:System.String"/> to convert.</param>
            <param name="settings">The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see> that will be used to deserialize the specified JSON <see cref="T:System.String"/> or null to use the default <see cref="T:Newtonsoft.Json.JsonSerializerSettings" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm">JsonSerializerSettings</see>.</param>
            <returns>An instance of the specified type that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize``1(System.String,System.Boolean)">
            <summary>
            Deserializes the specified JSON <see cref="T:System.String"/> to an equivalent instance of the specified type.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="value">The JSON <see cref="T:System.String"/> to convert.</param>
            <param name="enableAdvancedConversions">true to enabled advanced conversions; otherwise, false.</param>
            <returns>An instance of the specified type that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified JSON <see cref="T:System.String"/> to an equivalent instance of the specified type.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="value">The JSON <see cref="T:System.String"/> to convert.</param>
            <returns>An instance of the specified type that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize``1(Newtonsoft.Json.JsonConverter{``0},System.String,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Deserializes the specified JSON <see cref="T:System.String"/> to an equivalent instance of the specified type using the specified <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see>.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="converter">The <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see> that is used to deserialize <paramref name="value"/> to an equivalent instance of the specified type.</param>
            <param name="value">The JSON <see cref="T:System.String"/> to convert.</param>
            <param name="serializer">The calling <see cref="T:Newtonsoft.Json.JsonSerializer" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializer.htm">JsonSerializer</see>.</param>
            <returns>An instance of the specified type that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Json.Newtonsoft.TcHmiJsonSerializer.Deserialize``1(Newtonsoft.Json.JsonConverter{``0},System.String)">
            <summary>
            Deserializes the specified JSON <see cref="T:System.String"/> to an equivalent instance of the specified type using the specified <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see>.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="converter">The <see cref="T:Newtonsoft.Json.JsonConverter`1" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonConverter_1.htm">JsonConverter{T}</see> that is used to deserialize <paramref name="value"/> to an equivalent instance of the specified type.</param>
            <param name="value">The JSON <see cref="T:System.String"/> to convert.</param>
            <returns>An instance of the specified type that is equivalent to <paramref name="value"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition">
            <summary>
            Represents a definition that can be referenced in a JSON schema.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.Definition.Definitions">
            <summary>
            Gets an empty <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2"/> because a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/> cannot contain further <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Definition.#ctor(TcHmiSrv.Core.Value)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="schema">A <see cref="T:TcHmiSrv.Core.Value"/> that represents a JSON schema definition.</param>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException">
            <summary>
            Represents an <see cref="T:System.Exception"/> that is thrown when two <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s with the same key are not equal.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException.Key">
            <summary>
            Gets the key of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException.First">
            <summary>
            Gets the first <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException.Second">
            <summary>
            Gets the second <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException.Message">
            <summary>
            Gets a message that describes the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException.#ctor(System.String,System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Definition,TcHmiSrv.Core.Tools.DynamicSymbols.Definition,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException"/> class with the specified error message, key, <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s and a reference to the inner <see cref="T:System.Exception"/> that is the cause of this <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException"/>.
            </summary>
            <param name="message">The error message that explains the reason for the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException"/>.</param>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.</param>
            <param name="first">The first <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>.</param>
            <param name="second">The second <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>.</param>
            <param name="innerException">The <see cref="T:System.Exception"/> that is the cause of the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException"/>, or a null reference (Nothing in Visual Basic) if no inner <see cref="T:System.Exception"/> is specified.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException.#ctor(System.String,System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Definition,TcHmiSrv.Core.Tools.DynamicSymbols.Definition)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException"/> class with the specified error message, key and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
            <param name="message">The error message that explains the reason for the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DefinitionMismatchException"/>.</param>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.</param>
            <param name="first">The first <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>.</param>
            <param name="second">The second <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>.</param>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException">
            <summary>
            Represents an <see cref="T:System.Exception"/> that is thrown when handling a <see cref="T:TcHmiSrv.Core.Command"/> in the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> failed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException.Command">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Command"/> that caused the <see cref="P:System.Exception.InnerException"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException.Message">
            <summary>
            Gets a message that describes the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException.#ctor(System.String,TcHmiSrv.Core.Command,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException"/> class with the specified error message, <see cref="T:TcHmiSrv.Core.Command"/> and a reference to the inner <see cref="T:System.Exception"/> that is the cause of this <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException"/>.
            </summary>
            <param name="message">The error message that explains the reason for the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException"/>.</param>
            <param name="command">The <see cref="T:TcHmiSrv.Core.Command"/> that caused <paramref name="innerException"/>.</param>
            <param name="innerException">The <see cref="T:System.Exception"/> that is the cause of the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolException"/>.</param>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider">
            <summary>
            Provides dynamic symbols in TwinCAT HMI server extensions.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Definitions">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}},System.Collections.Generic.IComparer{System.String},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and an <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
            <param name="symbols">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the TwinCAT HMI server extension.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s. -or- null to not sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.</param>
            <param name="handleException">true to invoke <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleException(TcHmiSrv.Core.Command,System.Exception)"/> if an <see cref="T:System.Exception"/> is thrown while handling a <see cref="T:TcHmiSrv.Core.Command"/>; otherwise, false to rethrow the original <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}},System.Collections.Generic.IComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and an <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
            <param name="symbols">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the TwinCAT HMI server extension.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s. -or- null to not sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s.
            </summary>
            <param name="symbols">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the TwinCAT HMI server extension.</param>
            <param name="handleException">true to invoke <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleException(TcHmiSrv.Core.Command,System.Exception)"/> if an <see cref="T:System.Exception"/> is thrown while handling a <see cref="T:TcHmiSrv.Core.Command"/>; otherwise, false to rethrow the original <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s.
            </summary>
            <param name="symbols">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the TwinCAT HMI server extension.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class without <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s.
            </summary>
            <param name="handleException">true to invoke <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleException(TcHmiSrv.Core.Command,System.Exception)"/> if an <see cref="T:System.Exception"/> is thrown while handling a <see cref="T:TcHmiSrv.Core.Command"/>; otherwise, false to rethrow the original <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class without <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleException(TcHmiSrv.Core.Command,System.Exception)">
            <summary>
            Handles the <see cref="T:System.Exception"/> that was thrown while handling the specified <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="command">The <see cref="T:TcHmiSrv.Core.Command"/> that caused <paramref name="exception"/>.</param>
            <param name="exception">The <see cref="T:System.Exception"/> that was thrown while handling <paramref name="command"/>.</param>
            <returns>true if <paramref name="command"/> is handled; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleCommand(TcHmiSrv.Core.Command)">
            <summary>
            Handles the specified <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
            <param name="command">The <see cref="T:TcHmiSrv.Core.Command"/> to handle.</param>
            <returns>true if <paramref name="command"/> was handled; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleCommands(TcHmiSrv.Core.CommandGroup)">
            <summary>
            Handles the <see cref="T:TcHmiSrv.Core.Command"/>s in the specified <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
            <param name="commands">A <see cref="T:TcHmiSrv.Core.CommandGroup"/> containing the <see cref="T:TcHmiSrv.Core.Command"/>s to handle.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Command"/>s that cannot be handled by the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.GetSchema(System.String,System.Collections.Generic.Queue{System.String})">
            <summary>
            Gets the schema of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with the specified key at the specified path.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> from which to get a schema.</param>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements that specify the path of the schema to get. -or- null to get the root schema of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with the specified <paramref name="key"/>.</param>
            <returns>The schema of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> at the specified path if a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with the specified <paramref name="key"/> exists; otherwise, null.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.GetSchema(System.Collections.Generic.Queue{System.String})">
            <summary>
            Gets the schema of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> at the specified path.
            </summary>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements that specify the path of the schema to get. The element at the beginning of the <see cref="T:System.Collections.Generic.Queue`1"/> identifies the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> from which to get a schema. Therefore the <see cref="T:System.Collections.Generic.Queue`1"/> must not be empty.</param>
            <returns>The schema of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> at the specified path if a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> identified by the element at the beginning of <paramref name="elements"/> exists; otherwise, null.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.GetSchema(System.String)">
            <summary>
            Gets the schema of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> at the specified path.
            </summary>
            <param name="path">The path of the schema to get. The elements in the path must be separated by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>, '[' or ']'. The first element identifies the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> from which to get a schema. Therefore the <see cref="T:System.String"/> must not be null or empty.</param>
            <returns>The schema of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> at the specified <paramref name="path"/> if a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> identified by the first element in <paramref name="path"/> exists; otherwise, null.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.AddOrUpdate(System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol)">
            <summary>
            Add a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> to the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> if the specified key does not already exist, or updates an existing <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.
            </summary>
            <param name="key">The key to be added or whose <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> should be updated.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to add or update.</param>
            <returns>true if <paramref name="value"/> was added to the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>; false if an existing <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> was updated with <paramref name="value"/>.</returns>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Count">
            <summary>
            Gets the number of <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s contained in the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> is read-only.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with the specified key.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> to get or set.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with the specified key.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Add(System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with the specified key to the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> to add.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> to add.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> contains a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.</param>
            <returns>true if the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> contains a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with <paramref name="key"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Remove(System.String)">
            <summary>
            Removes the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with the specified key from the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> to remove.</param>
            <returns>true if the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is successfully removed; otherwise, false. This method also returns false if <paramref name="key"/> was not found in the original <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.TryGetValue(System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol@)">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> associated with the specified key.
            </summary>
            <param name="key">The key whose <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> to get.</param>
            <param name="value">When this method returns, the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> associated with <paramref name="key"/>, if <paramref name="key"/> is found; otherwise, null. This parameter is passed uninitialized.</param>
            <returns>true if the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> contains a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> with <paramref name="key"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Clear">
            <summary>
            Removes all <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s from the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.CopyTo(System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}[],System.Int32)">
            <summary>
            Copies the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s copied from <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerator`1"/> that iterates through the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver">
            <summary>
            Represents an <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> for JSON schemas.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver.PreContractResolver">
            <summary>
            Contains the <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> that is used to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/> before <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> tries to resolve the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver.PostContractResolver">
            <summary>
            Contains the <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> that is used to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/> after <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> tried to resolve the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver.#ctor(Newtonsoft.Json.Serialization.IContractResolver,Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> class with the specified <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see>s.
            </summary>
            <param name="preContractResolver">An <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> that is used to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/> before <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> tries to resolve the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see>. -or- null to use the resolving mechanism of <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/>. The resolving mechanism of <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> is also used if <see cref="M:Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)" href="https://www.newtonsoft.com/json/help/html/M_Newtonsoft_Json_Serialization_IContractResolver_ResolveContract.htm">IContractResolver.ResolveContract(Type)</see> returns null.</param>
            <param name="postContractResolver">An <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> that is used to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/> after <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> tried to resolve the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see>. -or- null to use the resolving mechanism of <see cref="T:Newtonsoft.Json.Serialization.DefaultContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_DefaultContractResolver.htm">DefaultContractResolver</see>. The resolving mechanism of <see cref="T:Newtonsoft.Json.Serialization.DefaultContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_DefaultContractResolver.htm">DefaultContractResolver</see> is also used if <see cref="M:Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)" href="https://www.newtonsoft.com/json/help/html/M_Newtonsoft_Json_Serialization_IContractResolver_ResolveContract.htm">IContractResolver.ResolveContract(Type)</see> returns null.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> class where <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver.PreContractResolver"/> is null and <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver.PostContractResolver"/> is <see cref="T:Newtonsoft.Json.Serialization.DefaultContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_DefaultContractResolver.htm">DefaultContractResolver</see>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver.ResolveContract(System.Type)">
            <summary>
            Resolves the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for.</param>
            <returns>The <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for <paramref name="type"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue">
            <summary>
            Represent a JSON schema.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.Definitions">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.#ctor(TcHmiSrv.Core.Value,System.Collections.Generic.IDictionary{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Definition})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/> and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
            <param name="schema">A <see cref="T:TcHmiSrv.Core.Value"/> that represents a JSON schema without <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.</param>
            <param name="definitions">The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s associated with <paramref name="schema"/>. -or- null if no <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s are associated with <paramref name="schema"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.#ctor(TcHmiSrv.Core.Value)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="schema">A <see cref="T:TcHmiSrv.Core.Value"/> that represents a JSON schema without <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.#ctor(TcHmiSrv.Core.Value,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="schema">A <see cref="T:TcHmiSrv.Core.Value"/> that represents a JSON schema.</param>
            <param name="extractDefinitions">true to extract the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s from <paramref name="schema"/>; otherwise, false.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.#ctor(Newtonsoft.Json.Schema.JSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> class with the specified <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see>.
            </summary>
            <param name="schema">A <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> that represents the JSON schema to convert into a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.ToValue(System.Boolean)">
            <summary>
            Returns a <see cref="T:TcHmiSrv.Core.Value"/> that represents the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.
            </summary>
            <param name="omitDefinitions">true to omit the <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.Definitions"/> in the returned <see cref="T:TcHmiSrv.Core.Value"/>; otherwise, false to add them to the returned <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Value"/> that represents the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.Equals(TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> is equal to another <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> to compare with this <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> is equal to the other <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.ToString(System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.
            </summary>
            <param name="omitDefinitions">true to omit the <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.Definitions"/> in the returned <see cref="T:System.String"/>; otherwise, false to add them to the returned <see cref="T:System.String"/>.</param>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue.ToString">
            <inheritdoc/>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.NamespaceDoc">
            <summary>
            Provides types to dynamically create, read and write symbols in TwinCAT HMI server extensions.<br/>
            </summary>
            <remarks>
            This implementation replaces the <see href="https://infosys.beckhoff.com/content/1033/te2000_tc3_hmi_engineering/5353822091.html?id=1722907211807423924">TcHmiSrv.DynamicSymbols.TcHmiSchemaGenerator</see> class.<br/>
            Dynamic symbols are exposed through an instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class. It represents a collection of symbols provided by a TwinCAT HMI server extension.<br/>
            The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class implements the <see cref="T:System.Collections.Generic.IDictionary`2"/> interface, which makes it easy to add new symbols with <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Add(System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol)">DynamicSymbolsProvider.Add(string, Symbol)</see> and remove existing symbols with <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Remove(System.String)">DynamicSymbolsProvider.Remove(string)</see> at runtime of the TwinCAT HMI server extension.<br/>
            There are also many other methods to read and modify the contents of a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>. Just take a look at its documentation to explore them all.<br/>
            <br/>
            When adding a new symbol to the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> using <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.Add(System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol)">DynamicSymbolsProvider.Add(string, Symbol)</see>, <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.AddOrUpdate(System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol)">DynamicSymbolsProvider.AddOrUpdate(string, Symbol)</see> or the <see cref="T:System.Collections.Generic.IDictionary`2"/> indexer, you have to provide a <see cref="T:System.String"/> and an instance of a type derived from the abstract <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class:
            <list type="bullet">
              <item>
                <description><b><see cref="T:System.String"/> key</b><br/>
                Represents the name of the symbol to add. This <see cref="T:System.String"/> must be an unique key, just like every symbol offered by a TwinCAT HMI server extension is unique. The name of the symbol is addressed by the <see cref="P:TcHmiSrv.Core.Command.Mapping">Command.Mapping</see> property.</description>
              </item>
              <item>
                <description><b><see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> symbol</b><br/>
                Represents the symbol to add, including its schema and value:
                  <list type="bullet">
                    <item>
                      <description>The schema of the symbol must be constant and can be specified in the constructor when initializing a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class. Schemes of the <c>readValue</c> and <c>writeValue</c> are represented by instances of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> class, whereas <c>function</c>, <c>readOnly</c> and <c>doc</c> can be specified directly by an instance of the corresponding type. <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/>s can be created either by a manually constructed instance of the <see cref="T:TcHmiSrv.Core.Value"/> class containing a valid JSON schema, or by an automatically generated <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see>. The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator"/> is also able to create a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> for a specified <see cref="T:System.Type"/> by calling <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.Generate(System.Type)">TcHmiJSchemaGenerator.Generate(Type)</see>.</description>
                    </item>
                    <item>
                      <description>The value of the symbol is represented by the abstract <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Read(System.Collections.Generic.Queue{System.String})">Symbol.Read(Queue{string})</see> and <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Write(System.Collections.Generic.Queue{System.String},TcHmiSrv.Core.Value)">Symbol.Write(Queue{string}, Value)</see> methods, which allow to read or write the value of the symbol itself or any of its sub-elements.<br/>
                      The value to be read or written is wrapped in an instance of the <see cref="T:TcHmiSrv.Core.Value"/> class, because it can store values of all types supported by the TwinCAT HMI server.<br/>
                      To access a sub-element of the current value of the symbol, a <see cref="T:System.Collections.Generic.Queue`1"/> containing the path to the sub-element is passed to the <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Read(System.Collections.Generic.Queue{System.String})">Symbol.Read(Queue{string})</see> and <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Write(System.Collections.Generic.Queue{System.String},TcHmiSrv.Core.Value)">Symbol.Write(Queue{string}, Value)</see> methods to determine the sub-element to be read or written. The <see cref="T:System.Collections.Generic.Queue`1"/> is normally created from the <see cref="P:TcHmiSrv.Core.Command.Path">Command.Path</see> property. Call <see cref="M:System.Collections.Generic.Queue`1.Dequeue">Queue{T}.Dequeue</see> to get the name of the next sub-element until <see cref="P:System.Collections.Generic.Queue`1.Count">Queue{T}.Count</see><c> == 0</c> is true and then read or write the current element. You can use a <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler"/> from the <see cref="N:TcHmiSrv.Core.Tools.Resolving"/> namespace to read or write sub-elements of almost any .NET type.<br/>
                      There are also the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> classes, which have already implemented <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Read(System.Collections.Generic.Queue{System.String})">Symbol.Read(Queue{string})</see> and <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Write(System.Collections.Generic.Queue{System.String},TcHmiSrv.Core.Value)">Symbol.Write(Queue{string}, Value)</see> by using a <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.RecursiveResolveHandler`1"/> with the <see cref="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveValueResolver.DefaultResolver">RecursiveValueResolver.DefaultResolver</see> to read and write the <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value">SymbolWithValue.Value</see> property.</description>
                    </item>
                  </list>
                </description>
              </item>
            </list>
            <b>Now, how are the dynamic symbols provided by your TwinCAT HMI server extension with <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/>?</b><br/>
            First of all, dynamic symbols are provided by three function symbols that the TwinCAT HMI Server calls for each TwinCAT HMI server extension that implements them. Therefore, you have to add the following lines to the <c>"symbols"</c> property in the <c>Config.json</c> of your TwinCAT HMI server extension:
            <code>
            "ListSymbols": {
              "readValue": {
                "function": true
              }
            },
            "GetDefinitions": {
              "readValue": {
                "function": true
              }
            },
            "GetSchema": {
              "readValue": {
                "function": true
              }
            }
            </code>
            Which information does each of the above symbols provide? Let's take a quick look at them:
            <list type="bullet">
              <item>
                <description><b>ListSymbols</b><br/>
                Lists the dynamic symbols of a TwinCAT HMI server extension with their names and schemes. If the schemes contain definitions, they're also listed here.</description>
              </item>
              <item>
                <description><b>GetDefinitions</b><br/>
                Gets the definitions used by the schemes that are returned by <c>ListSymbols</c>. This symbol is called when only the definitions are needed, without the symbols that actually use them.</description>
              </item>
              <item>
                <description><b>GetSchema</b><br/>
                Gets the schema of a specified symbol or sub-symbol. The path of the symbol or sub-symbol whose schema should be retrieved is specified as a <see cref="T:System.String"/> in the <see cref="P:TcHmiSrv.Core.Command.WriteValue">Command.WriteValue</see> property.</description>
              </item>
            </list>
            After declaring the required symbols <c>ListSymbols</c>, <c>GetDefinitions</c> and <c>GetSchema</c> by adding them to the <c>Config.json</c> of your TwinCAT HMI server extension, they still need to be defined by implementing them. But don't worry: You don't have to do this on your own!<br/>
            The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class that was mentioned above already contains all the necessary information that must be returned for the above symbols. Therefore, you only have to pass the <see cref="T:TcHmiSrv.Core.CommandGroup"/> specified by the <see cref="P:TcHmiSrv.Core.Listeners.RequestListenerEventArgs.OnRequestEventArgs.Commands">OnRequestEventArgs.Commands</see> property of the <see cref="E:TcHmiSrv.Core.Listeners.RequestListener.OnRequest">RequestListener.OnRequest</see> event handler to the <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleCommands(TcHmiSrv.Core.CommandGroup)">DynamicSymbolsProvider.HandleCommands(CommandGroup)</see> method as in the following piece of code where <c>this.provider</c> represents the instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider"/> class:
            <code>
            foreach (Command command in this.provider.HandleCommands(e.Commands))
            {
                // Get the mapping from the current command
                string mapping = command.Mapping;
            
                try
                {
                    // Use the mapping to check which command is requested
                    switch (mapping)
                    {
                        // Handle commands for non-dynamic symbols here
                        ...
                    }
                }
                catch
                {
                    // Handle exceptions for non-dynamic symbols here
                    ...
                }
            }
            </code>
            This adds the appropriate information to the <see cref="P:TcHmiSrv.Core.Command.ReadValue">Command.ReadValue</see> property of the <c>ListSymbols</c>, <c>GetDefinitions</c> and <c>GetSchema </c> <see cref="T:TcHmiSrv.Core.Command"/>s.<br/>
            Furthermore, <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleCommands(TcHmiSrv.Core.CommandGroup)">DynamicSymbolsProvider.HandleCommands(CommandGroup)</see> also handles <see cref="T:TcHmiSrv.Core.Command"/>s for reading and writing dynamic symbols by calling the <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Read(System.Collections.Generic.Queue{System.String})">Symbol.Read(Queue{string})</see> and <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Write(System.Collections.Generic.Queue{System.String},TcHmiSrv.Core.Value)">Symbol.Write(Queue{string}, Value)</see> methods mentioned above.<br/>
            Non-dynamic symbols and symbols other than <c>ListSymbols</c>, <c>GetDefinitions</c> and <c>GetSchema</c> included in the <c>Config.json</c> of your TwinCAT HMI server extension cannot be handled by <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleCommands(TcHmiSrv.Core.CommandGroup)">DynamicSymbolsProvider.HandleCommands(CommandGroup)</see>.
            To not ignore them, unhandled <see cref="T:TcHmiSrv.Core.Command"/>s are returned as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> so that you can handle them normally in your TwinCAT HMI server extension.
            </remarks>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider">
            <summary>
            Provides dynamic symbols in TwinCAT HMI server extensions. The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s are sorted using <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider.StringComparer"/>
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider.StringComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}},System.Collections.Generic.IComparer{System.String},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and an <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
            <param name="symbols">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the TwinCAT HMI server extension.</param>
            <param name="stringComparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s. -or- null to not sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.</param>
            <param name="handleException">true to invoke <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleException(TcHmiSrv.Core.Command,System.Exception)"/> if an <see cref="T:System.Exception"/> is thrown while handling a <see cref="T:TcHmiSrv.Core.Command"/>; otherwise, false to rethrow the original <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}},System.Collections.Generic.IComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and an <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.
            </summary>
            <param name="symbols">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the TwinCAT HMI server extension.</param>
            <param name="stringComparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s. -or- null to not sort the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="P:System.StringComparer.Ordinal"/>.
            </summary>
            <param name="symbols">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the TwinCAT HMI server extension.</param>
            <param name="handleException">true to invoke <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.DynamicSymbolsProvider.HandleException(TcHmiSrv.Core.Command,System.Exception)"/> if an <see cref="T:System.Exception"/> is thrown while handling a <see cref="T:TcHmiSrv.Core.Command"/>; otherwise, false to rethrow the original <see cref="T:System.Exception"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,TcHmiSrv.Core.Tools.DynamicSymbols.Symbol}})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SortedDynamicSymbolsProvider"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s and <see cref="P:System.StringComparer.Ordinal"/>.
            </summary>
            <param name="symbols">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>s of the TwinCAT HMI server extension.</param>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol">
            <summary>
            Represents a symbol of a TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.ReadValue">
            <summary>
            Gets the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.WriteValue">
            <summary>
            Gets the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Function">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is a function.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.ReadOnly">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is read-only.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Doc">
            <summary>
            Gets the documentation of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Schema">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> representing the JSON schema of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Definitions">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Definition"/>s of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.#ctor(TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class with the specified schemes.
            </summary>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is a function. -or- null to use the default value.</param>
            <param name="readOnly">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is read-only. -or- null to use the default value.</param>
            <param name="doc">The documentation of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.#ctor(TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class with the specified schemes.
            </summary>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is a function. -or- null to use the default value.</param>
            <param name="readOnly">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is read-only. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.#ctor(TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class with the specified schemes.
            </summary>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is a function. -or- null to use the default value.</param>
            <param name="doc">The documentation of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.#ctor(TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class with the specified schemes.
            </summary>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is a function. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.#ctor(TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class with the specified schemes.
            </summary>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.#ctor(TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class with the specified schemes.
            </summary>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is a function. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.#ctor(TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> class with the specified schema.
            </summary>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Read(System.Collections.Generic.Queue{System.String})">
            <summary>
            Reads the <see cref="T:TcHmiSrv.Core.Value"/> at the specified path from the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements that specify the path of <see cref="T:TcHmiSrv.Core.Value"/> to read from.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Value"/> that was read from <see cref="T:TcHmiSrv.Core.Value"/> at the specified path.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Write(System.Collections.Generic.Queue{System.String},TcHmiSrv.Core.Value)">
            <summary>
            Writes the specified <see cref="T:TcHmiSrv.Core.Value"/> at the specified path to the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements that specify the path of <see cref="T:TcHmiSrv.Core.Value"/> to write to.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to write.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Value"/> that was written to <see cref="T:TcHmiSrv.Core.Value"/> at the specified path.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Equals(TcHmiSrv.Core.Tools.DynamicSymbols.Symbol)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is equal to another <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> to compare with this <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/> is equal to the other <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.ToString">
            <inheritdoc/>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue">
            <summary>
            Represents a symbol of a TwinCAT HMI server extension with a <see cref="T:TcHmiSrv.Core.Value"/> that can be set directly.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.#ctor(TcHmiSrv.Core.Value,System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>, <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> is a function. -or- null to use the default value.</param>
            <param name="readOnly">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> is read-only. -or- null to use the default value.</param>
            <param name="doc">The documentation of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.#ctor(TcHmiSrv.Core.Value,System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>, <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> is a function. -or- null to use the default value.</param>
            <param name="readOnly">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> is read-only. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.#ctor(TcHmiSrv.Core.Value,System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>, <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> is a function. -or- null to use the default value.</param>
            <param name="doc">The documentation of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.#ctor(TcHmiSrv.Core.Value,System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>, <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> is a function. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.#ctor(TcHmiSrv.Core.Value,System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>, <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.#ctor(TcHmiSrv.Core.Value,System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>, <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> is a function. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.#ctor(TcHmiSrv.Core.Value,System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/> class with the specified <see cref="T:TcHmiSrv.Core.Value"/>, <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schema.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.SetValue(TcHmiSrv.Core.Value)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithDirectValue"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to set.</param>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue">
            <summary>
            Represents a symbol of a TwinCAT HMI server extension with a <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Value"/> of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.<br/>
            If you override property <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> by not returning an instance variable and if you write to the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol"/>, you must also override method <see cref="M:TcHmiSrv.Core.Tools.DynamicSymbols.Symbol.Write(System.Collections.Generic.Queue{System.String},TcHmiSrv.Core.Value)"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.#ctor(System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> class with the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is a function. -or- null to use the default value.</param>
            <param name="readOnly">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is read-only. -or- null to use the default value.</param>
            <param name="doc">The documentation of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.#ctor(System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> class with the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is a function. -or- null to use the default value.</param>
            <param name="readOnly">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is read-only. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.#ctor(System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> class with the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is a function. -or- null to use the default value.</param>
            <param name="doc">The documentation of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.#ctor(System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> class with the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is a function. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.#ctor(System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> class with the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="writeValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the write value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.#ctor(System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> class with the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schemes.
            </summary>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <param name="function">A value that indicates whether the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is a function. -or- null to use the default value.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.#ctor(System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Value},TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> class with the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> and schema.
            </summary>
            <param name="valueComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> with other <see cref="T:TcHmiSrv.Core.Value"/>s. -or- null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> for <see cref="T:TcHmiSrv.Core.Value"/>s.</param>
            <param name="readValue">A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> that represents the JSON schema of the read value of the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Read(System.Collections.Generic.Queue{System.String})">
            <summary>
            Reads the <see cref="T:TcHmiSrv.Core.Value"/> at the specified path from <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/>.
            </summary>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements that specify the path of <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> to read from.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Value"/> that was read from <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> at the specified path.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Write(System.Collections.Generic.Queue{System.String},TcHmiSrv.Core.Value)">
            <summary>
            Writes the specified <see cref="T:TcHmiSrv.Core.Value"/> at the specified path to <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/>.
            </summary>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements that specify the path of <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> to write to.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to write.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Value"/> that was written to <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Value"/> at the specified path.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Equals(TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue)">
            <summary>
            Indicates whether the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is equal to another <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.
            </summary>
            <param name="other">The <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> to compare with this <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <returns>true if the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/> is equal to the other <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>.</param>
            <returns>true if <paramref name="obj"/> is equal to the current <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.SymbolWithValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator">
            <summary>
            Generates a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> from a specified <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.DefaultGenerator">
            <summary>
            Gets a new default <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.DefaultEnumGenerationProvider">
            <summary>
            Gets the default <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> that customizes <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> generation for all <see cref="T:System.Type"/>s where <see cref="P:System.Type.IsEnum"/> is true.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.SchemaIdGenerationHandling">
            <summary>
            Contains a value that indicates how IDs are generated for JSON schemas with no ID.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.SchemaLocationHandling">
            <summary>
            Contains a value that indicates the location of referenced JSON schemas.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.DefaultRequired">
            <summary>
            Contains a value that indicates the default required state of JSON schemas.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.GenerationProviders">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IList`1"/> of <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see>s that are used to customize <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> generation.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.ContractResolver">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.PreContractResolver">
            <summary>
            Contains the <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> that is used to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/> before <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.ContractResolver"/> tries to resolve the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.PostContractResolver">
            <summary>
            Contains the <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> that is used to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/> after <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> tried to resolve the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.CreateGenerator(Newtonsoft.Json.Schema.Generation.SchemaPropertyOrderHandling,Newtonsoft.Json.Schema.Generation.SchemaReferenceHandling,System.Boolean,System.Collections.Generic.IEnumerable{Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider},Newtonsoft.Json.Serialization.IContractResolver,Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>
            Creates a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator"/> with the specified parameters.
            </summary>
            <param name="schemaPropertyOrderHandling">The <see cref="T:Newtonsoft.Json.Schema.Generation.SchemaPropertyOrderHandling" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_SchemaPropertyOrderHandling.htm">SchemaPropertyOrderHandling</see> that indicates in which order the properties should appear in the generated schema.</param>
            <param name="schemaReferenceHandling">The <see cref="T:Newtonsoft.Json.Schema.Generation.SchemaReferenceHandling" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_SchemaReferenceHandling.htm">SchemaReferenceHandling</see> that indicates which generated schemas can be referenced.</param>
            <param name="required">true if all properties in the generated JSON schema are required; otherwise, false.</param>
            <param name="generationProviders">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see>s that are used to customize <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> generation.</param>
            <param name="preContractResolver">An <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> that is used to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/> before <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> tries to resolve the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see>.</param>
            <param name="postContractResolver">An <see cref="T:Newtonsoft.Json.Serialization.IContractResolver" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_IContractResolver.htm">IContractResolver</see> that is used to resolve a <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see> for a given <see cref="T:System.Type"/> after <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaContractResolver"/> tried to resolve the <see cref="T:Newtonsoft.Json.Serialization.JsonContract" href="https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_Serialization_JsonContract.htm">JsonContract</see>.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator"/> with the specified parameters.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.CreateEnumGenerationProvider(System.Type,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> for the specified <see cref="T:System.Type"/> where <see cref="P:System.Type.IsEnum"/> is true.
            </summary>
            <param name="enumType">The <see cref="T:System.Type"/> for which to create a new <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see>. -or- null to create new <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> for all <see cref="T:System.Type"/>s where <see cref="P:System.Type.IsEnum"/> is true.</param>
            <param name="hasDefault">true if the <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> created by the returned <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> should contain a default value which will be the first constant in the enumeration; otherwise, false.</param>
            <returns>A new <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> for <paramref name="enumType"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.GetGenerationProvider(System.Type,System.Collections.Generic.IEnumerable{Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider})">
            <summary>
            Gets a <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> from the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see>s that can generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> for the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="objectType">The <see cref="T:System.Type"/> to generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> from.</param>
            <param name="generationProviders">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> from which to select a <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> that can generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> for <paramref name="objectType"/>.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> from <paramref name="generationProviders"/> that can generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> for <paramref name="objectType"/>, if found; otherwise, null.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.GetGenerationProvider(System.Type,Newtonsoft.Json.Schema.Generation.JSchemaGenerator)">
            <summary>
            Gets a <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> from the <see cref="P:Newtonsoft.Json.Schema.Generation.JSchemaGenerator.GenerationProviders" href="https://www.newtonsoft.com/jsonschema/help/html/P_Newtonsoft_Json_Schema_Generation_JSchemaGenerator_GenerationProviders.htm">JSchemaGenerator.GenerationProviders</see> of the specified <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerator" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerator.htm">JSchemaGenerator</see> that can generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> for the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="objectType">The <see cref="T:System.Type"/> to generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> from.</param>
            <param name="generator">A <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerator" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerator.htm">JSchemaGenerator</see> from which to select a <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> that can generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> for <paramref name="objectType"/>.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> from <paramref name="generator"/> that can generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> for <paramref name="objectType"/>, if found; otherwise, null.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.GetGenerationProvider(System.Type)">
            <summary>
            Gets a <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> from the <see cref="P:Newtonsoft.Json.Schema.Generation.JSchemaGenerator.GenerationProviders" href="https://www.newtonsoft.com/jsonschema/help/html/P_Newtonsoft_Json_Schema_Generation_JSchemaGenerator_GenerationProviders.htm">JSchemaGenerator.GenerationProviders</see> of the <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.DefaultGenerator"/> that can generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> for the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="objectType">The <see cref="T:System.Type"/> to generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> from.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Schema.Generation.JSchemaGenerationProvider" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_Generation_JSchemaGenerationProvider.htm">JSchemaGenerationProvider</see> from <see cref="P:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.DefaultGenerator"/> that can generate a <see cref="T:Newtonsoft.Json.Schema.JSchema" href="https://www.newtonsoft.com/jsonschema/help/html/T_Newtonsoft_Json_Schema_JSchema.htm">JSchema</see> for <paramref name="objectType"/>, if found; otherwise, null.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.DynamicSymbols.TcHmiJSchemaGenerator.Generate(System.Type)">
            <summary>
            Generates a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> from the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to generate a <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> from.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Tools.DynamicSymbols.JsonSchemaValue"/> generated from <paramref name="type"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Management.IErrorProvider">
            <summary>
            Provides an interface that defines a method to get the <see cref="T:System.String"/> representation for an error code in a TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Management.IErrorProvider.ErrorString(System.UInt32)">
            <summary>
            Converts the specified error code to the corresponding <see cref="T:System.String"/> representation.
            </summary>
            <param name="errorCode">The error code to convert.</param>
            <returns>The <see cref="T:System.String"/> representation of <paramref name="errorCode"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Management.IServerExtension">
            <summary>
            Provides an interface for a TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Management.IServerExtension.Init">
            <summary>
            Called after the TwinCAT HMI server loaded the server extension.
            </summary>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if the TwinCAT HMI server extension has been successfully initialized; otherwise, another <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Management.NamespaceDoc">
            <summary>
            Contains interfaces that the default <see cref="T:System.Type"/> of a TwinCAT HMI server extension can implement to support initialization and conversion error codes into human readable <see cref="T:System.String"/>s.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.NamespaceGroupDoc">
            <summary>
            Contains tools for the core types of the TwinCAT HMI server extension API.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Queries.CreateFilter">
            <summary>
            Creates a filter.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Queries.CreateFilter.CreateFromFilter(TcHmiSrv.Core.Value)">
            <summary>
            Creates a <see cref="T:System.Func`2"/> that can be used to filter collections of <see cref="T:TcHmiSrv.Core.Value"/>s.
            </summary>
            <param name="filters">A <see cref="T:TcHmiSrv.Core.Value"/> containing a filter.</param>
            <returns>A <see cref="T:System.Func`2"/> that can be used to filter collections of <see cref="T:TcHmiSrv.Core.Value"/>s.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Queries.Extensions.NamespaceDoc">
            <summary>
            Provides extension methods to sort and filter collections of <see cref="T:TcHmiSrv.Core.Value"/>s.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Queries.Extensions.ValueExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Queries.Extensions.ValueExtensions.OrderBy(System.Collections.Generic.IEnumerable{TcHmiSrv.Core.Value},System.String)">
            <summary>
            Sorts the <see cref="T:TcHmiSrv.Core.Value"/>s of a sequence according to the specified <see cref="T:System.String"/>.
            </summary>
            <param name="collection">The sequence of <see cref="T:TcHmiSrv.Core.Value"/>s to order.</param>
            <param name="orderBy">A <see cref="T:System.String"/> that describes how to order <paramref name="collection"/>.</param>
            <returns>An <see cref="T:System.Linq.IOrderedEnumerable`1"/> whose <see cref="T:TcHmiSrv.Core.Value"/>s are sorted according to <paramref name="orderBy"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Queries.NamespaceDoc">
            <summary>
            Contains types to compare <see cref="T:TcHmiSrv.Core.Value"/>s and create filters.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Queries.NamespaceGroupDoc">
            <summary>
            Contains types to filter and sort collections of <see cref="T:TcHmiSrv.Core.Value"/>s.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Queries.ValueComparer">
            <summary>
            Provides a <see cref="T:System.Collections.Generic.Comparer`1"/> for type <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueComparer.Default">
            <summary>
            Gets the default <see cref="T:System.Collections.Generic.Comparer`1"/> for type <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueComparer.StringComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to compare instances of type <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueComparer.EventComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueComparer.MessageComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueComparer.AlarmComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Queries.ValueComparer.#ctor(System.Collections.Generic.IComparer{System.String},System.Collections.Generic.IComparer{TcHmiSrv.Core.Event},System.Collections.Generic.IComparer{TcHmiSrv.Core.Message},System.Collections.Generic.IComparer{TcHmiSrv.Core.Alarm})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Queries.ValueComparer"/> class with the specified <see cref="T:System.Collections.Generic.IComparer`1"/>s that are used to compare instances of type <see cref="T:System.String"/>, <see cref="T:TcHmiSrv.Core.Event"/>, <see cref="T:TcHmiSrv.Core.Message"/> and <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="stringComparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to compare instances of type <see cref="T:System.String"/>.</param>
            <param name="eventComparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Event"/>.</param>
            <param name="messageComparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="alarmComparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Queries.ValueComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Queries.ValueComparer"/> class with <see cref="P:System.StringComparer.Ordinal"/> for instances of type <see cref="T:System.String"/> and <see cref="P:System.Collections.Generic.Comparer`1.Default"/> for instances of type <see cref="T:TcHmiSrv.Core.Event"/>, <see cref="T:TcHmiSrv.Core.Message"/> and <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Queries.ValueComparer.Compare(TcHmiSrv.Core.Value,TcHmiSrv.Core.Value)">
            <summary>
            Performs a comparison of two <see cref="T:TcHmiSrv.Core.Value"/>s and returns a value indicating whether one <see cref="T:TcHmiSrv.Core.Value"/> is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <param name="y">The second <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <returns>A value that is less than zero if <paramref name="x"/> is less than <paramref name="y"/>, zero if <paramref name="x"/> equals <paramref name="y"/> or greater than zero if <paramref name="x"/> is greater than <paramref name="y"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer">
            <summary>
            Provides an <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for type <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.Default">
            <summary>
            Gets the default <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for type <see cref="T:TcHmiSrv.Core.Value"/> with <see cref="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.RelaxedTypeComparison"/> set to false.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.Relaxed">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for type <see cref="T:TcHmiSrv.Core.Value"/> with <see cref="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.RelaxedTypeComparison"/> set to true.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.RelaxedTypeComparison">
            <summary>
            Gets a value that indicates whether relaxed <see cref="T:TcHmiSrv.Core.ValueType"/> comparision is used.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.StringComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare instances of type <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.EventComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.MessageComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.AlarmComparer">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.#ctor(System.Boolean,System.Collections.Generic.IEqualityComparer{System.String},System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Event},System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Message},System.Collections.Generic.IEqualityComparer{TcHmiSrv.Core.Alarm})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer"/> class with a value that indicates whether relaxed <see cref="T:TcHmiSrv.Core.ValueType"/> comparision should be used and <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>s that are used to compare instances of type <see cref="T:System.String"/>, <see cref="T:TcHmiSrv.Core.Event"/>, <see cref="T:TcHmiSrv.Core.Message"/> and <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
            <param name="relaxedTypeComparison">true to consider <see cref="F:TcHmiSrv.Core.ValueType.Map"/> and <see cref="F:TcHmiSrv.Core.ValueType.Struct"/> equal; otherwise, false.</param>
            <param name="stringComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare instances of type <see cref="T:System.String"/>.</param>
            <param name="eventComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Event"/>.</param>
            <param name="messageComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="alarmComparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that is used to compare instances of type <see cref="T:TcHmiSrv.Core.Alarm"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer"/> class with a value that indicates whether relaxed <see cref="T:TcHmiSrv.Core.ValueType"/> comparision should be used.
            </summary>
            <param name="relaxedTypeComparison">true to consider <see cref="F:TcHmiSrv.Core.ValueType.Map"/> and <see cref="F:TcHmiSrv.Core.ValueType.Struct"/> equal; otherwise, false.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Queries.ValueEqualityComparer.Equals(TcHmiSrv.Core.Value,TcHmiSrv.Core.Value)">
            <summary>
            Determines whether two <see cref="T:TcHmiSrv.Core.Value"/>s are equal.
            </summary>
            <param name="x">The first <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <param name="y">The second <see cref="T:TcHmiSrv.Core.Value"/> to compare.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Core.Value"/>s are equal; otherwise, false.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Converter">
            <summary>
            Represents a method that converts an <see cref="T:System.Object"/> to an instance of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="conversionType">The <see cref="T:System.Type"/> of the instance to return.</param>
            <returns>An <see cref="T:System.Object"/> of the specified <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Handlers.NamespaceDoc">
            <summary>
            Contains types to handle resolving instances of any type by a specified path.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Handlers.RecursiveResolveHandler`1">
            <summary>
            Provides methods to handle resolving instances of a specified type.<br/>
            Instances of the specified type consist only of other instances of the specified type, like the <see cref="T:TcHmiSrv.Core.Value"/> class without <see cref="T:TcHmiSrv.Core.Alarm"/>s, <see cref="T:TcHmiSrv.Core.Event"/>s and <see cref="T:TcHmiSrv.Core.Message"/>s.
            </summary>
            <typeparam name="T">The type of the instances to resolve.</typeparam>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.RecursiveResolveHandler`1.Resolver">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver`1"/> that is used to resolve instances of the specified type.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.RecursiveResolveHandler`1.#ctor(TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.RecursiveResolveHandler`1"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver`1"/>.
            </summary>
            <param name="resolver">The <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver`1"/> that is used to resolve instances of the specified type.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.RecursiveResolveHandler`1.ReadElement(`0,System.String)">
            <summary>
            Reads the specified element from the current instance.
            </summary>
            <param name="current">An instance of the specified type to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.RecursiveResolveHandler`1.WriteElement(`0,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified value to the specified element of the current instance.
            </summary>
            <param name="current">An instance of the specified type to write to.</param>
            <param name="element">The name of the element to write.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.RecursiveResolveHandler`1.WriteElements(`0@,System.Collections.Generic.Queue{System.String},`0,System.Boolean)">
            <summary>
            Writes the specified value at the specified elements to the current instance.
            </summary>
            <param name="current">An instance of the specified type to write to. If <paramref name="elements"/> are empty, the <paramref name="value"/> is written directly to this parameter.</param>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> that is used to determine the element to write.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="throwOnError">true to throw an <see cref="T:System.Exception"/> if writing the specified element failed; otherwise, false to return the value at which writing fails.</param>
            <returns>The new value of at the specified <paramref name="elements"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1">
            <summary>
            Provides methods to handle resolving instances of a specified type.
            </summary>
            <typeparam name="T">The type of the instances to resolve.</typeparam>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1.Description">
            <summary>
            Gets a description that is used in <see cref="T:System.Exception"/> messages to display what was tried to resolve.<br/>
            If <see cref="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1.Description"/> is null, the <see cref="T:System.Type"/> of the instance that is actually resolved is displayed.<br/>
            If the instance that is actually resolved is also null, the type of <typeparamref name="T"/> is displayed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1.CanRead">
            <summary>
            Gets a value that indicates whether this <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1"/> can read elements.<br/>
            The default value is true.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1.CanWrite">
            <summary>
            Gets a value that indicates whether this <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1"/> can write elements.<br/>
            The default value is true.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1.ReadElement(`0,System.String)">
            <summary>
            Reads the specified element from the current instance.
            </summary>
            <param name="current">An instance of the specified type to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1.WriteElement(`0,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified value to the specified element of the current instance.
            </summary>
            <param name="current">An instance of the specified type to write to.</param>
            <param name="element">The name of the element to write.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1.ReadElements(`0,System.Collections.Generic.Queue{System.String},System.Boolean)">
            <summary>
            Reads the specified elements from the current instance.
            </summary>
            <param name="current">An instance of the specified type to read from.</param>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements to read.</param>
            <param name="throwOnError">true to throw an <see cref="T:System.Exception"/> if reading the specified <paramref name="elements"/> failed; otherwise, false to return the value at which reading fails.</param>
            <returns>The value at the specified <paramref name="elements"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler`1.WriteElements(`0@,System.Collections.Generic.Queue{System.String},System.Object,TcHmiSrv.Core.Tools.Resolving.Converter,System.Boolean)">
            <summary>
            Writes the specified value at the specified elements to the current instance.
            </summary>
            <param name="current">An instance of the specified type to write to.<br/>
            If <paramref name="elements"/> are empty, the <paramref name="value"/> is written directly to this parameter.</param>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> that is used to determine the element to write.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the element specified by <paramref name="elements"/>.</param>
            <param name="throwOnError">true to throw an <see cref="T:System.Exception"/> if writing the specified element failed; otherwise, false to return the value at which writing fails.</param>
            <returns>The new value of at the specified <paramref name="elements"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler">
            <summary>
            Provides methods to handle resolving <see cref="T:System.Object"/>s.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.DefaultConverter">
            <summary>
            Gets a default <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that returns the specified <see cref="T:System.Object"/> regardless of the specified <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.ValueConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that converts the specified <see cref="T:System.Object"/> to a <see cref="T:TcHmiSrv.Core.Value"/> by calling the appropriate constructor.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.JsonConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that converts the specified <see cref="T:System.Object"/> to an instance of the specified <see cref="T:System.Type"/> by calling <see cref="M:System.Object.ToString"/> and passing the result to <see cref="M:Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,System.Type)"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.ValueJsonConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that converts the specified <see cref="T:TcHmiSrv.Core.Value"/> to an instance of the specified <see cref="T:System.Type"/> by calling <see cref="M:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions.ToJson(TcHmiSrv.Core.Value)"/> and passing the result to <see cref="M:Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,System.Type)"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.JsonValueConverter">
            <summary>
            Gets a <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that converts the specified <see cref="T:System.Object"/> to a <see cref="T:TcHmiSrv.Core.Value"/> by calling <see cref="M:Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)"/> and passing the result to <see cref="M:TcHmiSrv.Core.Tools.Json.Extensions.ValueExtensions.FromJson(System.String)"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.DefaultHandler">
            <summary>
            Gets a default <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler"/> that uses <see cref="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.ValueResolver.DefaultResolver"/> and <see cref="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.DefaultResolver"/> to resolve.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.Resolvers">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/>s that are used by the current <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.#ctor(System.Collections.Generic.IEnumerable{TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/>s.
            </summary>
            <param name="resolvers">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/>s that can be used.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.#ctor(TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver[])">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/>s.
            </summary>
            <param name="resolvers">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/>s that can be used.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.FindReader(System.Type)">
            <summary>
            Finds a <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> that can read elements from instances of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of the instance to read from.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> that can read elements from instances of the specified <paramref name="type"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.FindWriter(System.Type)">
            <summary>
            Finds a <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> that can write elements to instances of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of the instance to write to.</param>
            <returns>A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> that can write elements to instances of the specified <paramref name="type"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.CreateQueue(System.String)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Queue`1"/> from the specified path.
            </summary>
            <param name="path">The path to create a <see cref="T:System.Collections.Generic.Queue`1"/> from.</param>
            <returns>A <see cref="T:System.Collections.Generic.Queue`1"/> created from <paramref name="path"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.ReadElement(System.Object,System.String)">
            <summary>
            Reads the specified element from the current instance.
            </summary>
            <param name="current">An instance of the specified type to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.WriteElement(System.Object,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified value to the specified element of the current instance.
            </summary>
            <param name="current">An instance of the specified type to write to.</param>
            <param name="element">The name of the element to write.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler.WriteElementsGeneric``1(``0@,System.Collections.Generic.Queue{System.String},System.Object,TcHmiSrv.Core.Tools.Resolving.Converter,System.Boolean)">
            <summary>
            Writes the specified value at the specified elements to the current instance of the specified type.
            </summary>
            <typeparam name="TResult">The type of the current instance to write to.</typeparam>
            <param name="current">An instance of the specified type to write to.<br/>
            If <paramref name="elements"/> are empty, the <paramref name="value"/> is written directly to this parameter.</param>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> that is used to determine the element to write.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the element specified by <paramref name="elements"/>.</param>
            <param name="throwOnError">true to throw an <see cref="T:System.Exception"/> if writing the specified element failed; otherwise, false to return the value at which writing fails.</param>
            <returns>The new value of at the specified <paramref name="elements"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.NamespaceDoc">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> delegate that represents a method that converts an <see cref="T:System.Object"/> to an instance of the specified <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.NamespaceGroupDoc">
            <summary>
            Contains types to resolve instances of any type by a specified path.
            </summary>
            <remarks>
            This implementation replaces the <see href="https://infosys.beckhoff.com/content/1033/te2000_tc3_hmi_engineering/5353808779.html?id=4558652217090423710">TcHmiSrv.DynamicSymbols.TcHmiResolver</see> and <see href="https://infosys.beckhoff.com/content/1033/te2000_tc3_hmi_engineering/5353847691.html?id=398601910961676902">TcHmiSrv.DynamicSymbols.TcHmiUniversalResolver</see> classes.<br/>
            Use an instance of a type derived from <see cref="T:TcHmiSrv.Core.Tools.Resolving.Handlers.ResolveHandler"/> to handle resolving of a specified type. You can implement custom <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/>s to control resolving or use <see cref="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.DefaultResolver">ObjectResolver.DefaultResolver</see> and <see cref="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.ValueResolver.DefaultResolver">ValueResolver.DefaultResolver</see>.
            </remarks>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags">
            <summary>
            Specifies flags that control which elements can be read and written by an instance of the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver"/> class.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.None">
            <summary>
            No elements can be read or written.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Enumerables">
            <summary>
            Elements of type <see cref="T:System.Collections.IEnumerable"/> can be read.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Arrays">
            <summary>
            Elements of an <see cref="T:System.Array"/> type can be read and written.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.GenericLists">
            <summary>
            Elements of type <see cref="T:System.Collections.Generic.IList`1"/> can be read and written.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.NonGenericLists">
            <summary>
            Elements of type <see cref="T:System.Collections.IList"/> can be read and written.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Lists">
            <summary>
            Combines <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.GenericLists"/> and <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.NonGenericLists"/>.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Collections">
            <summary>
            Combines <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Enumerables"/>, <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Arrays"/> and <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Lists"/>.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.GenericDictionaries">
            <summary>
            Elements of type <see cref="T:System.Collections.Generic.IDictionary`2"/> can be read and written.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.NonGenericDictionaries">
            <summary>
            Elements of type <see cref="T:System.Collections.IDictionary"/> can be read and written.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Dictionaries">
            <summary>
            Combines <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.GenericDictionaries"/> and <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.NonGenericDictionaries"/>.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Properties">
            <summary>
            Properties can be read and written.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Fields">
            <summary>
            Fields can be read and written.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Members">
            <summary>
            Combines <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Properties"/> and <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Fields"/>.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.All">
            <summary>
            Combines <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Collections"/>, <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Dictionaries"/> and <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.Members"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.NamespaceDoc">
            <summary>
            Provides <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/>s to resolve <see cref="T:System.Object"/>s and <see cref="T:TcHmiSrv.Core.Value"/>s by a specified element.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver">
            <summary>
            Resolves <see cref="T:System.Object"/>s by a specified element using dynamic type conversions and operations from the <see cref="N:System.Reflection"/> namespace.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.DefaultLookup">
            <summary>
            Contains the default <see cref="T:System.Reflection.BindingFlags"/> for field and property lookup.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.DefaultResolver">
            <summary>
            Gets a default <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver"/> with <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.All"/> and <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.DefaultLookup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.IncludeFlags">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags"/> that specify which elements can be read and written.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.BindingFlags">
            <summary>
            Gets the <see cref="T:System.Reflection.BindingFlags"/> that specify how the search of fields and properties is conducted.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.#ctor(TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags,System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags"/> and <see cref="T:System.Reflection.BindingFlags"/>.
            </summary>
            <param name="includeFlags">A bitmask comprised of one or more <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags"/> that specify which elements can be read and written.</param>
            <param name="bindingFlags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that specify how the search of fields and properties is conducted.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.#ctor(TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver"/> class with the specified <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags"/> and <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.DefaultLookup"/>.
            </summary>
            <param name="includeFlags">A bitmask comprised of one or more <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags"/> that specify which elements can be read and written.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.#ctor(System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver"/> class with the specified <see cref="T:System.Reflection.BindingFlags"/> and <see cref="F:TcHmiSrv.Core.Tools.Resolving.Resolvers.IncludeFlags.All"/>.
            </summary>
            <param name="bindingFlags">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that specify how the search of fields and properties is conducted.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.CanResolve(System.Type)">
            <summary>
            Determines whether this <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> can resolve <see cref="T:System.Object"/>s of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of the <see cref="T:System.Object"/> to resolve.</param>
            <returns>Always true.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.ReadElement(System.Object,System.String)">
            <summary>
            Reads the specified element from the current <see cref="T:System.Object"/>.
            </summary>
            <param name="current">The current <see cref="T:System.Object"/> to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.ObjectResolver.WriteElement(System.Object,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified <see cref="T:System.Object"/> to the specified element of the current <see cref="T:System.Object"/>.
            </summary>
            <param name="current">The current <see cref="T:System.Object"/> to write to.</param>
            <param name="element">The name of the element to write.<br/>
            If this parameter is null, <paramref name="value"/> should be written directly to <paramref name="current"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver`1">
            <summary>
            Resolves instances of a specified type.<br/>
            Instances of the specified type consist only of other instances of the specified type, like the <see cref="T:TcHmiSrv.Core.Value"/> class without <see cref="T:TcHmiSrv.Core.Alarm"/>s, <see cref="T:TcHmiSrv.Core.Event"/>s and <see cref="T:TcHmiSrv.Core.Message"/>s.
            </summary>
            <typeparam name="T">The type of the instances to resolve.</typeparam>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver`1.ReadElement(`0,System.String)">
            <summary>
            Reads the specified element from the current <see cref="T:System.Object"/>.
            </summary>
            <param name="current">The current <see cref="T:System.Object"/> to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver`1.WriteElement(`0,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified <see cref="T:System.Object"/> to the specified element of the current instance.
            </summary>
            <param name="current">The current instance to write to.</param>
            <param name="element">The name of the element to write.<br/>
            If this parameter is null, <paramref name="value"/> should be written directly to <paramref name="current"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the specified type associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver`1.ReadElementRecursive(`0,System.String)">
            <summary>
            Reads the specified element from the current instance.
            </summary>
            <param name="current">The current instance to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveResolver`1.WriteElementRecursive(`0,System.String,`0)">
            <summary>
            Writes the specified value to the specified element of the current instance.
            </summary>
            <param name="current">The current instance to write to.</param>
            <param name="element">The name of the element to write.<br/>
            If this parameter is null, <paramref name="value"/> should be written directly to <paramref name="current"/>.</param>
            <param name="value">The value to be written.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveValueResolver">
            <summary>
            Resolves <see cref="T:TcHmiSrv.Core.Value"/>s by a specified element.<br/>
            <see cref="T:TcHmiSrv.Core.Value"/>s containing an <see cref="T:TcHmiSrv.Core.Alarm"/>, <see cref="T:TcHmiSrv.Core.Event"/> or <see cref="T:TcHmiSrv.Core.Message"/> cannot be resolved.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveValueResolver.DefaultResolver">
            <summary>
            Gets a default <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveValueResolver"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveValueResolver.ReadElementRecursive(TcHmiSrv.Core.Value,System.String)">
            <summary>
            Reads the specified element from the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="current">The <see cref="T:TcHmiSrv.Core.Value"/> to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.RecursiveValueResolver.WriteElementRecursive(TcHmiSrv.Core.Value,System.String,TcHmiSrv.Core.Value)">
            <summary>
            Writes the specified value to the specified element of the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="current">The current <see cref="T:TcHmiSrv.Core.Value"/> to write to.</param>
            <param name="element">The name of the element to write.<br/>
            If this parameter is null, <paramref name="value"/> should be written directly to <paramref name="current"/>.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to be written.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver">
            <summary>
            Resolves <see cref="T:System.Object"/>s by a specified element.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver.CanRead">
            <summary>
            Gets a value that indicates whether this <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> can read elements.<br/>
            The default value is true.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver.CanWrite">
            <summary>
            Gets a value that indicates whether this <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> can write elements.<br/>
            The default value is true.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver.CanResolve(System.Type)">
            <summary>
            Determines whether this <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> can resolve <see cref="T:System.Object"/>s of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of the <see cref="T:System.Object"/> to resolve.</param>
            <returns>true if this <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> can resolve <see cref="T:System.Object"/>s of the specified <see cref="T:System.Type"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver.ReadElement(System.Object,System.String)">
            <summary>
            Reads the specified element from the current <see cref="T:System.Object"/>.
            </summary>
            <param name="current">The current <see cref="T:System.Object"/> to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver.WriteElement(System.Object,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified <see cref="T:System.Object"/> to the specified element of the current <see cref="T:System.Object"/>.
            </summary>
            <param name="current">The current <see cref="T:System.Object"/> to write to.</param>
            <param name="element">The name of the element to write.<br/>
            If this parameter is null, <paramref name="value"/> should be written directly to <paramref name="current"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver`1">
            <summary>
            Resolves instances of a specified type.
            </summary>
            <typeparam name="T">The type of the instances to resolve.</typeparam>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver`1.CanResolve(System.Type)">
            <summary>
            Determines whether this <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver"/> can resolve instances of the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of the instances to resolve.</param>
            <returns>true if an instance of <paramref name="type"/> can be assigned to an instance of <typeparamref name="T"/> (see <see cref="M:System.Type.IsAssignableFrom(System.Type)"/>); otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver`1.ReadElement(System.Object,System.String)">
            <summary>
            Reads the specified element from the current <see cref="T:System.Object"/>.
            </summary>
            <param name="current">The current <see cref="T:System.Object"/> to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver`1.WriteElement(System.Object,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified <see cref="T:System.Object"/> to the specified element of the current <see cref="T:System.Object"/>.
            </summary>
            <param name="current">The current <see cref="T:System.Object"/> to write to.</param>
            <param name="element">The name of the element to write.<br/>
            If this parameter is null, <paramref name="value"/> should be written directly to <paramref name="current"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver`1.ReadElement(`0,System.String)">
            <summary>
            Reads the specified element from the current instance.
            </summary>
            <param name="current">The current instance of the specified type to read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.Resolver`1.WriteElement(`0,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified <see cref="T:System.Object"/> to the specified element of the current instance.
            </summary>
            <param name="current">The current instance of the specified type to write to.</param>
            <param name="element">The name of the element to write.<br/>
            If this parameter is null, <paramref name="value"/> should be written directly to <paramref name="current"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.ValueResolver">
            <summary>
            Resolves <see cref="T:TcHmiSrv.Core.Value"/>s by a specified element.<br/>
            <see cref="T:TcHmiSrv.Core.Value"/>s containing an <see cref="T:TcHmiSrv.Core.Alarm"/>, <see cref="T:TcHmiSrv.Core.Event"/> or <see cref="T:TcHmiSrv.Core.Message"/> can also be resolved.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Resolving.Resolvers.ValueResolver.DefaultResolver">
            <summary>
            Gets a default <see cref="T:TcHmiSrv.Core.Tools.Resolving.Resolvers.ValueResolver"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.ValueResolver.ReadElement(TcHmiSrv.Core.Value,System.String)">
            <summary>
            Reads the specified element from the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="current">The current <see cref="T:TcHmiSrv.Core.Value"/> read from.</param>
            <param name="element">The name of the element to read.</param>
            <returns>The value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Resolving.Resolvers.ValueResolver.WriteElement(TcHmiSrv.Core.Value,System.String,System.Object,TcHmiSrv.Core.Tools.Resolving.Converter)">
            <summary>
            Writes the specified <see cref="T:System.Object"/> to the specified element of the current <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="current">The current <see cref="T:TcHmiSrv.Core.Value"/> to write to.</param>
            <param name="element">The name of the element to write.<br/>
            If this parameter is null, <paramref name="value"/> should be written directly to <paramref name="current"/>.</param>
            <param name="value">The <see cref="T:System.Object"/> to be written.</param>
            <param name="converter">A <see cref="T:TcHmiSrv.Core.Tools.Resolving.Converter"/> that is used to convert <paramref name="value"/> to an instance of the <see cref="T:System.Type"/> associated with the specified <paramref name="element"/>.</param>
            <returns>The new value of the specified <paramref name="element"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettings">
            <summary>
            Represents the settings that are passed to method <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtHost.RegisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener,TcHmiSrv.Core.Value)"/> to configure how a <see cref="T:TcHmiSrv.Core.Listeners.ConfigListener"/> is registered. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettings.Default">
            <summary>
            Gets the default <see cref="T:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettings"/> with a <see cref="T:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter"/> to listen for <see cref="F:TcHmiSrv.Core.ConfigChangeType.All"/> changes in all paths.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettings.Settings">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettings"/> as a <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettings.Filters">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter"/>s for configuration changes.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter">
            <summary>
            Represents a filter for configuration changes. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter.Flags">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ConfigChangeType"/> that specifies for which configuration changes an event should be raised.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter.Paths">
            <summary>
            Gets the paths for which an event should be raised if the configuration changes. The elements in the paths must be separated by a double colon.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter.#ctor(TcHmiSrv.Core.ConfigChangeType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter"/> class with the specified <see cref="T:TcHmiSrv.Core.ConfigChangeType"/> and paths.
            </summary>
            <param name="flags">The <see cref="T:TcHmiSrv.Core.ConfigChangeType"/> that specifies for which configuration changes an event should be raised.</param>
            <param name="paths">The paths for which an event should be raised if the configuration changes. The elements in the paths must be separated by a double colon.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.Settings.ConfigListenerSettingsFilter"/> class to listen for <see cref="F:TcHmiSrv.Core.ConfigChangeType.All"/> changes in all paths.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Settings.ListenerSettings">
            <summary>
            Provides an abstract base class for the settings that are passed to method <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtHost.RegisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener,TcHmiSrv.Core.Value)"/> to configure how an <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> is registered.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.Settings.ListenerSettings.Settings">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Tools.Settings.ListenerSettings"/> as a <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Settings.ListenerSettings.op_Implicit(TcHmiSrv.Core.Tools.Settings.ListenerSettings)~TcHmiSrv.Core.Value">
            <summary>
            Converts <see cref="T:TcHmiSrv.Core.Tools.Settings.ListenerSettings"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Tools.Settings.ListenerSettings"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.Settings.ListenerSettings.ToValue">
            <summary>
            Converts <see cref="T:TcHmiSrv.Core.Tools.Settings.ListenerSettings"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.Settings.NamespaceDoc">
            <summary>
            Contains types to generate settings for the configuration of listeners more easily.<br/>
            The generated settings can be specified when calling <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtHost.RegisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener,TcHmiSrv.Core.Value)">ITcHmiSrvExtHost.RegisterListener(Context, IListener, Value)</see>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.TypeAttribute.NamespaceDoc">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Tools.TypeAttribute.ServerExtensionTypeAttribute"/> that is used to specify the default <see cref="T:System.Type"/> of a TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Tools.TypeAttribute.ServerExtensionTypeAttribute">
            <summary>
            Specifies the default <see cref="T:System.Type"/> of a TwinCAT HMI server extension. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Tools.TypeAttribute.ServerExtensionTypeAttribute.Type">
            <summary>
            Gets the default <see cref="T:System.Type"/> of the TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Tools.TypeAttribute.ServerExtensionTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Tools.TypeAttribute.ServerExtensionTypeAttribute"/> class with the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The default <see cref="T:System.Type"/> of the TwinCAT HMI server extension.</param>
        </member>
        <member name="T:TcHmiSrv.Core.DateTimeRange">
            <summary>
            Provides the smallest and largest possible value of <see cref="T:System.DateTime"/> that the TwinCAT HMI server can handle.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.DateTimeRange.MinValue">
            <summary>
            Represents the smallest possible value of <see cref="T:System.DateTime"/> that the TwinCAT HMI server can handle.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.DateTimeRange.MaxValue">
            <summary>
            Represents the largest possible value of <see cref="T:System.DateTime"/> that the TwinCAT HMI server can handle.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Duplication.ICopyable`1">
            <summary>
            Supports deep and shallow copying, which creates a new instance of a class with the same value as an existing instance.
            </summary>
            <typeparam name="T">The type that is copyable.</typeparam>
        </member>
        <member name="T:TcHmiSrv.Core.Duplication.IDeepCopyable`1">
            <summary>
            Supports deep copying, which creates a new independent instance of a class with the same value as an existing instance.
            </summary>
            <typeparam name="T">The type that is deep copyable.</typeparam>
        </member>
        <member name="M:TcHmiSrv.Core.Duplication.IDeepCopyable`1.DeepCopy">
            <summary>
            Creates a new object that is a deep copy of the current instance.
            </summary>
            <returns>A new object that is a deep copy of the current instance.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Duplication.IShallowCopyable`1">
            <summary>
            Supports shallow copying, which creates a new instance of a class with the same value as an existing instance and shared references.
            </summary>
            <typeparam name="T">The type that is shallow copyable.</typeparam>
        </member>
        <member name="M:TcHmiSrv.Core.Duplication.IShallowCopyable`1.ShallowCopy">
            <summary>
            Creates a new object that is a shallow copy of the current instance.
            </summary>
            <returns>A new object that is a shallow copy of the current instance.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.Duplication.NamespaceDoc">
            <summary>
            Contains interfaces that declare methods to support deep and shallow copying.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Extensions.NamespaceDoc">
            <summary>
            Provides extension methods for the core types of the TwinCAT HMI server extension API.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Extensions.ValueExtensions">
            <summary>
            Provides extension methods for the <see cref="T:TcHmiSrv.Core.Value"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Extensions.ValueExtensions.ResolveBy(TcHmiSrv.Core.Value,System.Collections.Generic.Queue{System.String})">
            <summary>
            Resolves the current <see cref="T:TcHmiSrv.Core.Value"/> by the specified <see cref="T:System.Collections.Generic.Queue`1"/> of elements.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to resolve.</param>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements by which <paramref name="value"/> should be resolved.</param>
            <returns>A sub-<see cref="T:TcHmiSrv.Core.Value"/> of <paramref name="value"/> resolved by <paramref name="elements"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Extensions.ValueExtensions.ResolveBy(TcHmiSrv.Core.Value,System.String)">
            <summary>
            Resolves the current <see cref="T:TcHmiSrv.Core.Value"/> by the specified path.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to resolve.</param>
            <param name="path">The path by which <paramref name="value"/> should be resolved.</param>
            <returns>A sub-<see cref="T:TcHmiSrv.Core.Value"/> of <paramref name="value"/> resolved by <paramref name="path"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Extensions.ValueExtensions.TryResolveBy(TcHmiSrv.Core.Value,System.Collections.Generic.Queue{System.String},TcHmiSrv.Core.Value@)">
            <summary>
            Resolves the current <see cref="T:TcHmiSrv.Core.Value"/> by the specified <see cref="T:System.Collections.Generic.Queue`1"/> of elements. A return value indicates whether resolving succeeded.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to resolve.</param>
            <param name="elements">A <see cref="T:System.Collections.Generic.Queue`1"/> containing the elements by which <paramref name="value"/> should be resolved.</param>
            <param name="result">When this method returns, contains the sub-<see cref="T:TcHmiSrv.Core.Value"/> of <paramref name="value"/> resolved by <paramref name="elements"/>, if resolving succeeded, or the last <see cref="T:TcHmiSrv.Core.Value"/> at which resolving succeeded if resolving all <paramref name="elements"/> failed.</param>
            <returns>true if resolving <paramref name="value"/> by <paramref name="elements"/> succeeded; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Extensions.ValueExtensions.TryResolveBy(TcHmiSrv.Core.Value,System.String,TcHmiSrv.Core.Value@)">
            <summary>
            Resolves the current <see cref="T:TcHmiSrv.Core.Value"/> by the specified <see cref="T:System.Collections.Generic.Queue`1"/> of elements. A return value indicates whether resolving succeeded.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Core.Value"/> to resolve.</param>
            <param name="path">The path by which <paramref name="value"/> should be resolved.</param>
            <param name="result">When this method returns, contains the sub-<see cref="T:TcHmiSrv.Core.Value"/> of <paramref name="value"/> resolved by <paramref name="path"/>, if resolving succeeded, or the last <see cref="T:TcHmiSrv.Core.Value"/> at which resolving succeeded if resolving the entire <paramref name="path"/> failed.</param>
            <returns>true if resolving <paramref name="value"/> by <paramref name="path"/> succeeded; otherwise, false.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.General.NamespaceDoc">
            <summary>
            Contains general API types that allow to communicate with the TwinCAT HMI Server, for example by executing <see cref="T:TcHmiSrv.Core.Command"/>s or sending <see cref="T:TcHmiSrv.Core.Message"/>s.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.General.TcHmiApplication">
            <summary>
            Provides the <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtHost"/>, <see cref="T:TcHmiSrv.Core.Context"/> and path of a TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator">
            <summary>
            Contains the separator that separates the elements of a path.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.General.TcHmiApplication.SymbolPathElementSeparators">
            <summary>
            Contains the separator that separates the elements of a symbol path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.General.TcHmiApplication.Host">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtHost"/> that is used to initialize the TwinCAT HMI server extension and communicate with the TwinCAT HMI server.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.General.TcHmiApplication.AsyncHost">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/> that is used to initialize the TwinCAT HMI server extension and communicate with the TwinCAT HMI server synchronously and asynchronously.<br/>
            For more information, refer to the documentation of the <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/> interface.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.General.TcHmiApplication.Context">
            <summary>
            Gets the administrator <see cref="T:TcHmiSrv.Core.Context"/> that is used to initialize the TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.General.TcHmiApplication.Path">
            <summary>
            Gets the path of the TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiApplication.SplitPath(System.String,System.StringSplitOptions)">
            <summary>
            Splits the specified path into substrings based on <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>.
            </summary>
            <param name="path">The path to split.</param>
            <param name="options"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries"/> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None"/> to include empty array elements in the array returned.</param>
            <returns>An array whose elements contain the substrings in <paramref name="path"/> that are delimited by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiApplication.SplitPath(System.String)">
            <summary>
            Splits the specified path into substrings based on <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>.
            </summary>
            <param name="path">The path to split.</param>
            <returns>An array whose elements contain the substrings in <paramref name="path"/> that are delimited by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiApplication.SplitSymbolPath(System.String,System.StringSplitOptions)">
            <summary>
            Splits the specified symbol path into substrings based on <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.SymbolPathElementSeparators"/>.
            </summary>
            <param name="path">The symbol path to split.</param>
            <param name="options"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries"/> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None"/> to include empty array elements in the array returned.</param>
            <returns>An array whose elements contain the substrings in <paramref name="path"/> that are delimited by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.SymbolPathElementSeparators"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiApplication.SplitSymbolPath(System.String)">
            <summary>
            Splits the specified symbol path into substrings based on <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.SymbolPathElementSeparators"/>.
            </summary>
            <param name="path">The symbol path to split.</param>
            <returns>An array whose elements contain the substrings in <paramref name="path"/> that are delimited by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.SymbolPathElementSeparators"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiApplication.JoinPath(System.Object[])">
            <summary>
            Concatenates all elements of the specified <see cref="T:System.Object"/> array, using <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/> between each element.
            </summary>
            <param name="elements">An array of <see cref="T:System.Object"/>s that contains the elements to concatenate.</param>
            <returns>A <see cref="T:System.String"/> that consists of the specified <paramref name="elements"/> delimited by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>. If <paramref name="elements"/> is an empty array, the method returns <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiApplication.JoinPath(System.String[])">
            <summary>
            Concatenates all elements of the specified <see cref="T:System.String"/> array, using <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/> between each element.
            </summary>
            <param name="elements">An array of <see cref="T:System.String"/>s that contains the elements to concatenate.</param>
            <returns>A <see cref="T:System.String"/> that consists of the specified <paramref name="elements"/> delimited by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>. If <paramref name="elements"/> is an empty array, the method returns <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiApplication.JoinPath``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Concatenates all elements of the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/>, using <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/> between each element.
            </summary>
            <param name="elements">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.String"/>s that contains the elements to concatenate.</param>
            <returns>A <see cref="T:System.String"/> that consists of the specified <paramref name="elements"/> delimited by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>. If <paramref name="elements"/> has no members, the method returns <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiApplication.JoinPath``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Concatenates all elements of the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/>, using <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/> between each element.
            </summary>
            <typeparam name="T">The type of the elements to concatenate.</typeparam>
            <param name="elements">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the specified type that contains the elements to concatenate.</param>
            <returns>A <see cref="T:System.String"/> that consists of the specified <paramref name="elements"/> delimited by <see cref="F:TcHmiSrv.Core.General.TcHmiApplication.PathElementSeparator"/>. If <paramref name="elements"/> has no members, the method returns <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.General.TcHmiAsyncLogger">
            <summary>
            Provides an asynchronous logger to send and localize <see cref="T:TcHmiSrv.Core.Message"/>s.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.Send(TcHmiSrv.Core.ITcHmiSrvExtAsyncHost,TcHmiSrv.Core.Context,TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/>, <see cref="T:TcHmiSrv.Core.Context"/>, name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters.
            </summary>
            <param name="host">The <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/> that is used to send the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Send(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.SendAsync(TcHmiSrv.Core.ITcHmiSrvExtAsyncHost,TcHmiSrv.Core.Context,TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/>, <see cref="T:TcHmiSrv.Core.Context"/>, name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters as an asynchronous operation.
            </summary>
            <param name="host">The <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/> that is used to send the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SendAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.Send(TcHmiSrv.Core.Context,TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.Context"/>, name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Send(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.SendAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.Context"/>, name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SendAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.Send(TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters.
            </summary>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Send(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.SendAsync(TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters as an asynchronous operation.
            </summary>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SendAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.Localize(TcHmiSrv.Core.ITcHmiSrvExtAsyncHost,TcHmiSrv.Core.Context,System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/>, <see cref="T:TcHmiSrv.Core.Context"/>, name and parameters.
            </summary>
            <param name="host">The <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/> that is used to localize the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>The localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.LocalizeAsync(TcHmiSrv.Core.ITcHmiSrvExtAsyncHost,TcHmiSrv.Core.Context,System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/>, <see cref="T:TcHmiSrv.Core.Context"/>, name and parameters as an asynchronous operation.
            </summary>
            <param name="host">The <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost"/> that is used to localize the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns the localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.Localize(TcHmiSrv.Core.Context,System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.Context"/>, name and parameters.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>The localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.LocalizeAsync(TcHmiSrv.Core.Context,System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.Context"/>, name and parameters as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns the localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.Localize(System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified name and parameters.
            </summary>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>The localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiAsyncLogger.LocalizeAsync(System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified name and parameters as an asynchronous operation.
            </summary>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns the localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.General.TcHmiException">
            <summary>
            Represents an <see cref="T:System.Exception"/> that is thrown when an event invoked by an <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> failed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.General.TcHmiException.Result">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ErrorValue"/> that describes the current <see cref="T:TcHmiSrv.Core.General.TcHmiException"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.General.TcHmiException.Message">
            <summary>
            Gets a message that describes the current <see cref="T:TcHmiSrv.Core.General.TcHmiException"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiException.#ctor(System.String,TcHmiSrv.Core.ErrorValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.General.TcHmiException"/> class with the specified error message and result.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="result">An <see cref="T:TcHmiSrv.Core.ErrorValue"/> that describes the error.</param>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiException.#ctor(TcHmiSrv.Core.ErrorValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.General.TcHmiException"/> class with the specified result.
            </summary>
            <param name="result">An <see cref="T:TcHmiSrv.Core.ErrorValue"/> that describes the error.</param>
        </member>
        <member name="T:TcHmiSrv.Core.General.TcHmiLogger">
            <summary>
            Provides a logger to send and localize <see cref="T:TcHmiSrv.Core.Message"/>s.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiLogger.Send(TcHmiSrv.Core.ITcHmiSrvExtHost,TcHmiSrv.Core.Context@,TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtHost"/>, <see cref="T:TcHmiSrv.Core.Context"/>, name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters.
            </summary>
            <param name="host">The <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtHost"/> that is used to send the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Send(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiLogger.Send(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.Context"/>, name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Send(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiLogger.Send(TcHmiSrv.Core.Severity,System.String,System.String[])">
            <summary>
            Sends a <see cref="T:TcHmiSrv.Core.Message"/> with the specified name, <see cref="T:TcHmiSrv.Core.Severity"/> and parameters.
            </summary>
            <param name="severity">The <see cref="T:TcHmiSrv.Core.Severity"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to send.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> returned by <see cref="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Send(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Message)"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiLogger.Localize(TcHmiSrv.Core.ITcHmiSrvExtHost,TcHmiSrv.Core.Context,System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtHost"/>, <see cref="T:TcHmiSrv.Core.Context"/>, name and parameters.
            </summary>
            <param name="host">The <see cref="T:TcHmiSrv.Core.ITcHmiSrvExtHost"/> that is used to localize the <see cref="T:TcHmiSrv.Core.Message"/>.</param>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>The localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiLogger.Localize(TcHmiSrv.Core.Context,System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified <see cref="T:TcHmiSrv.Core.Context"/>, name and parameters.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>The localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.General.TcHmiLogger.Localize(System.String,System.String[])">
            <summary>
            Localizes a <see cref="T:TcHmiSrv.Core.Message"/> with the specified name and parameters.
            </summary>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <param name="parameters">The parameters of the <see cref="T:TcHmiSrv.Core.Message"/> to localize.</param>
            <returns>The localized <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.ICommandGroupMapper">
            <summary>
            Provides an interface for a mapper for an <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ICommandGroupMapper.ChangeState">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.MapperChangeState"/> of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ICommandGroupMapper.Flags">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.CommandGroupFlags"/> of the <see cref="T:TcHmiSrv.Core.CommandGroup"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.ICommandGroupMapper.Unset">
            <summary>
            Sets <see cref="P:TcHmiSrv.Core.CommandGroup.IsSet"/> to false.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.ICommandMapper">
            <summary>
            Provides an interface for a mapper for an <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ICommandMapper.Flags">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.InternalCommandOption"/> of the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ICommandMapper.LastSent">
            <summary>
            Contains a value that indicates when the <see cref="T:TcHmiSrv.Core.Command"/> was last sent.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ICommandMapper.SymbolName">
            <summary>
            Contains the name of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ICommandMapper.Hash">
            <summary>
            Contains the hash code of the <see cref="T:TcHmiSrv.Core.Command"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.ICommandMapper.SetPath(System.String)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Path"/>.
            </summary>
            <param name="path">The path of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ICommandMapper.SetMapping(System.String)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Mapping"/>.
            </summary>
            <param name="mapping">The mapping of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ICommandMapper.SetDomain(System.String)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Domain"/>.
            </summary>
            <param name="domain">The domain of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ICommandMapper.SetResult(TcHmiSrv.Core.ErrorValue)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Result"/>.
            </summary>
            <param name="result">The result of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ICommandMapper.SetSymbolOptions(TcHmiSrv.Core.Value)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.SymbolOptions"/>.
            </summary>
            <param name="options">The symbol options of the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ICommandMapper.SetPaging(TcHmiSrv.Core.Value)">
            <summary>
            Sets the <see cref="P:TcHmiSrv.Core.Command.Paging"/>.
            </summary>
            <param name="paging">The filter of the symbol used by the <see cref="T:TcHmiSrv.Core.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ICommandMapper.Unset">
            <summary>
            Sets <see cref="P:TcHmiSrv.Core.Command.IsSet"/> to false.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.ILocalizable">
            <summary>
            Provides an interface for a localizable object that contains a language variable and parameters.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ILocalizable.Name">
            <summary>
            Contains the name of the language variable.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ILocalizable.Domain">
            <summary>
            Gets the domain of the language variable. The language file of this domain will be used for localization.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ILocalizable.Parameters">
            <summary>
            Gets the parameters of the localizable object. The names of the parameters must match the placeholders in the localization string.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ILocalizable.Type">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ValueType"/> of the localizable object that will be <see cref="F:TcHmiSrv.Core.ValueType.Message"/> or <see cref="F:TcHmiSrv.Core.ValueType.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.ILocalizable.Severity">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Severity"/> of the localizable object.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost">
            <summary>
            Provides an interface to synchronously and asynchronously communicate with the TwinCAT HMI server.<br/>
            All methods that do <b>not</b> end with <c>Async</c> are executed synchronously and block until the specific request has been sent to the TwinCAT HMI server and a corresponding response has been received.<br/>
            The other methods that end with <c>Async</c> are executed asynchronously and do not block. Instead, they return a <see cref="T:System.Threading.Tasks.Task"/> or <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Send(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="message"/> should be sent.</param>
            <param name="message">The <see cref="T:TcHmiSrv.Core.Message"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Message"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SendAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Message"/> as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="message"/> should be sent.</param>
            <param name="message">The <see cref="T:TcHmiSrv.Core.Message"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Message"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Send(TcHmiSrv.Core.Context,TcHmiSrv.Core.Event@)">
            <summary>
            Adds or updates an <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> should be sent.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s. When this method returns, the <see cref="P:TcHmiSrv.Core.Event.Payload"/> may have been localized if it can be converted to <see cref="T:TcHmiSrv.Core.ILocalizable"/>.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Event"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SendAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Event)">
            <summary>
            Adds or updates an <see cref="T:TcHmiSrv.Core.Event"/> as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> should be sent.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s. When this method returns, the <see cref="P:TcHmiSrv.Core.Event.Payload"/> may have been localized if it can be converted to <see cref="T:TcHmiSrv.Core.ILocalizable"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns a <see cref="T:System.ValueTuple`2"/> containing <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Event"/> succeeded and the sent <see cref="T:TcHmiSrv.Core.Event"/>; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Send(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message,TcHmiSrv.Core.EventLifetime)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="message"/> should be sent.</param>
            <param name="message">The <see cref="T:TcHmiSrv.Core.Message"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s.</param>
            <param name="lifetime">Specifies whether the <see cref="T:TcHmiSrv.Core.Event"/> is stored persistently.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Message"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SendAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Message,TcHmiSrv.Core.EventLifetime)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Message"/> as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="message"/> should be sent.</param>
            <param name="message">The <see cref="T:TcHmiSrv.Core.Message"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s.</param>
            <param name="lifetime">Specifies whether the <see cref="T:TcHmiSrv.Core.Event"/> is stored persistently.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Message"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Send(TcHmiSrv.Core.Context,TcHmiSrv.Core.Event@,TcHmiSrv.Core.EventLifetime)">
            <summary>
            Adds or updates an <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> should be sent.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s. When this method returns, the <see cref="P:TcHmiSrv.Core.Event.Payload"/> may have been localized if it can be converted to <see cref="T:TcHmiSrv.Core.ILocalizable"/>.</param>
            <param name="lifetime">Specifies whether the <see cref="T:TcHmiSrv.Core.Event"/> is stored persistently.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Event"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SendAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Event,TcHmiSrv.Core.EventLifetime)">
            <summary>
            Adds or updates an <see cref="T:TcHmiSrv.Core.Event"/> as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> should be sent.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s. When this method returns, the <see cref="P:TcHmiSrv.Core.Event.Payload"/> may have been localized if it can be converted to <see cref="T:TcHmiSrv.Core.ILocalizable"/>.</param>
            <param name="lifetime">Specifies whether the <see cref="T:TcHmiSrv.Core.Event"/> is stored persistently.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns a <see cref="T:System.ValueTuple`2"/> containing <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Event"/> succeeded and the sent <see cref="T:TcHmiSrv.Core.Event"/>; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Execute(TcHmiSrv.Core.Context@,TcHmiSrv.Core.CommandGroup@)">
            <summary>
            Executes the specified <see cref="T:TcHmiSrv.Core.CommandGroup"/> inside any domain.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="commands"/> should be executed.</param>
            <param name="commands">A <see cref="T:TcHmiSrv.Core.CommandGroup"/> that contains the <see cref="T:TcHmiSrv.Core.Command"/>s to execute.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if executing the <paramref name="commands"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.ExecuteAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.CommandGroup)">
            <summary>
            Executes the specified <see cref="T:TcHmiSrv.Core.CommandGroup"/> inside any domain as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="commands"/> should be executed.</param>
            <param name="commands">A <see cref="T:TcHmiSrv.Core.CommandGroup"/> that contains the <see cref="T:TcHmiSrv.Core.Command"/>s to execute.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns a <see cref="T:System.ValueTuple`3"/> containing <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if executing the <paramref name="commands"/> succeeded, the <see cref="T:TcHmiSrv.Core.Context"/> and the executed <see cref="T:TcHmiSrv.Core.CommandGroup"/>; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Execute(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Command@)">
            <summary>
            Executes a single <see cref="T:TcHmiSrv.Core.Command"/> in the domain of the specified <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="command"/> should be executed.</param>
            <param name="command">The <see cref="T:TcHmiSrv.Core.Command"/> to execute.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if executing the <paramref name="command"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.ExecuteAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Command)">
            <summary>
            Executes a single <see cref="T:TcHmiSrv.Core.Command"/> in the domain of the specified <see cref="T:TcHmiSrv.Core.Context"/> as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="command"/> should be executed.</param>
            <param name="command">The <see cref="T:TcHmiSrv.Core.Command"/> to execute.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns a <see cref="T:System.ValueTuple`3"/> containing <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if executing the <paramref name="command"/> succeeded, the <see cref="T:TcHmiSrv.Core.Context"/> and the executed <see cref="T:TcHmiSrv.Core.Command"/>; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.Localize(TcHmiSrv.Core.Context,TcHmiSrv.Core.ILocalizable)">
            <summary>
            Localizes an <see cref="T:TcHmiSrv.Core.ILocalizable"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="localizable"/> should be localized.</param>
            <param name="localizable">The <see cref="T:TcHmiSrv.Core.ILocalizable"/> to localize.</param>
            <returns>A <see cref="T:System.String"/> that contains the localized text.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.LocalizeAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.ILocalizable)">
            <summary>
            Localizes an <see cref="T:TcHmiSrv.Core.ILocalizable"/> as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="localizable"/> should be localized.</param>
            <param name="localizable">The <see cref="T:TcHmiSrv.Core.ILocalizable"/> to localize.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns a <see cref="T:System.String"/> that contains the localized text.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.RegisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener)">
            <summary>
            Registers the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be registered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be registered at the TwinCAT HMI server.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.RegisterListenerAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener)">
            <summary>
            Registers the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be registered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be registered at the TwinCAT HMI server.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.RegisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener,TcHmiSrv.Core.Value)">
            <summary>
            Registers the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server using the specified settings.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be registered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be registered at the TwinCAT HMI server.</param>
            <param name="settings">An <see cref="T:TcHmiSrv.Core.Value"/> that contains the settings to use for registration.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.RegisterListenerAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener,TcHmiSrv.Core.Value)">
            <summary>
            Registers the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server using the specified settings as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be registered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be registered at the TwinCAT HMI server.</param>
            <param name="settings">An <see cref="T:TcHmiSrv.Core.Value"/> that contains the settings to use for registration.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.UnregisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener)">
            <summary>
            Unregisters the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be unregistered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be unregistered.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.UnregisterListenerAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener)">
            <summary>
            Unregisters the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be unregistered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be unregistered.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.NotifyListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.AlarmChangeType,TcHmiSrv.Core.Alarm)">
            <summary>
            Sends a notification if an <see cref="T:TcHmiSrv.Core.Alarm"/> has changed.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="alarm"/> has changed.</param>
            <param name="type">The <see cref="T:TcHmiSrv.Core.AlarmChangeType"/>.</param>
            <param name="alarm">The <see cref="T:TcHmiSrv.Core.Alarm"/> that has changed.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the notification succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.NotifyListenerAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.AlarmChangeType,TcHmiSrv.Core.Alarm)">
            <summary>
            Sends a notification if an <see cref="T:TcHmiSrv.Core.Alarm"/> has changed as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="alarm"/> has changed.</param>
            <param name="type">The <see cref="T:TcHmiSrv.Core.AlarmChangeType"/>.</param>
            <param name="alarm">The <see cref="T:TcHmiSrv.Core.Alarm"/> that has changed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the notification succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.GetConfigValue(TcHmiSrv.Core.Context,System.String)">
            <summary>
            Gets the configuration <see cref="T:TcHmiSrv.Core.Value"/> at the specified path.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to get the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the requested configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Value"/> at the specified <paramref name="path"/> if it exists; otherwise a <see cref="T:TcHmiSrv.Core.Value"/> that of <see cref="F:TcHmiSrv.Core.ValueType.Null"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.GetConfigValueAsync(TcHmiSrv.Core.Context,System.String)">
            <summary>
            Gets the configuration <see cref="T:TcHmiSrv.Core.Value"/> at the specified path as an asynchronous operation.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to get the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the requested configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns the <see cref="T:TcHmiSrv.Core.Value"/> at the specified <paramref name="path"/> if it exists; otherwise a <see cref="T:TcHmiSrv.Core.Value"/> that of <see cref="F:TcHmiSrv.Core.ValueType.Null"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SetConfigValue(TcHmiSrv.Core.Context,System.String,TcHmiSrv.Core.Value)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Value"/> to a map or vector in the configuration of the TwinCAT HMI server extension or updates an existing configuration <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to set the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to set.</param>
            <param name="value">The configuration <see cref="T:TcHmiSrv.Core.Value"/> to set.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if setting the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.SetConfigValueAsync(TcHmiSrv.Core.Context,System.String,TcHmiSrv.Core.Value)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Value"/> to a map or vector in the configuration of the TwinCAT HMI server extension or updates an existing configuration <see cref="T:TcHmiSrv.Core.Value"/> as an asynchronous operation.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to set the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to set.</param>
            <param name="value">The configuration <see cref="T:TcHmiSrv.Core.Value"/> to set.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if setting the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.ReplaceConfigValue(TcHmiSrv.Core.Context,System.String,TcHmiSrv.Core.Value)">
            <summary>
            Replaces a <see cref="T:TcHmiSrv.Core.Value"/> in the configuration of the TwinCAT HMI server extension.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to replace the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to replace.</param>
            <param name="value">The new configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if replacing the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.ReplaceConfigValueAsync(TcHmiSrv.Core.Context,System.String,TcHmiSrv.Core.Value)">
            <summary>
            Replaces a <see cref="T:TcHmiSrv.Core.Value"/> in the configuration of the TwinCAT HMI server extension as an asynchronous operation.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to replace the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to replace.</param>
            <param name="value">The new configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if replacing the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.RenameConfigValue(TcHmiSrv.Core.Context,System.String,System.String)">
            <summary>
            Renames a <see cref="T:TcHmiSrv.Core.Value"/> in the configuration of the TwinCAT HMI server extension.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to rename the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="oldPath">The old path of the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="newPath">The new path of the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if renaming the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.RenameConfigValueAsync(TcHmiSrv.Core.Context,System.String,System.String)">
            <summary>
            Renames a <see cref="T:TcHmiSrv.Core.Value"/> in the configuration of the TwinCAT HMI server extension as an asynchronous operation.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to rename the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="oldPath">The old path of the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="newPath">The new path of the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if renaming the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.DeleteConfigValue(TcHmiSrv.Core.Context,System.String)">
            <summary>
            Deletes a <see cref="T:TcHmiSrv.Core.Value"/> from the configuration of the TwinCAT HMI server extension.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to delete the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to delete.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if deleting the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.DeleteConfigValueAsync(TcHmiSrv.Core.Context,System.String)">
            <summary>
            Deletes a <see cref="T:TcHmiSrv.Core.Value"/> from the configuration of the TwinCAT HMI server extension as an asynchronous operation.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to delete the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to delete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if deleting the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.RemoveTemporaryEvent(TcHmiSrv.Core.Context,TcHmiSrv.Core.Event)">
            <summary>
            Sends a notification if an <see cref="T:TcHmiSrv.Core.Alarm"/> should be removed.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> has changed.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> should be removed.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the notification succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.RemoveTemporaryEventAsync(TcHmiSrv.Core.Context,TcHmiSrv.Core.Event)">
            <summary>
            Sends a notification if an <see cref="T:TcHmiSrv.Core.Alarm"/> should be removed as an asynchronous operation.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> has changed.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> should be removed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result"/> of the <see cref="T:System.Threading.Tasks.Task`1"/> returns <see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the notification succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.ResetTemporaryEvents(TcHmiSrv.Core.Context)">
            <summary>
            Triggers a refresh of the list of events provided by a TwinCAT HMI server extension that implements the <see cref="T:TcHmiSrv.Core.Listeners.AlarmProviderListener"/>.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> containing information about the user who tries to refresh temporary events and the domain of the TwinCAT HMI server extension that should be refreshed.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtAsyncHost.ResetTemporaryEventsAsync(TcHmiSrv.Core.Context)">
            <summary>
            Triggers a refresh of the list of events provided by a TwinCAT HMI server extension that implements the <see cref="T:TcHmiSrv.Core.Listeners.AlarmProviderListener"/> as an asynchronous operation.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> containing information about the user who tries to refresh temporary events and the domain of the TwinCAT HMI server extension that should be refreshed.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="T:TcHmiSrv.Core.ITcHmiSrvExtHost">
            <summary>
            Provides an interface to communicate with the TwinCAT HMI server.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Send(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Message)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="message"/> should be sent.</param>
            <param name="message">The <see cref="T:TcHmiSrv.Core.Message"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Message"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Send(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Event)">
            <summary>
            Adds or updates an <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> should be sent.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Event"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Send(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Message,TcHmiSrv.Core.EventLifetime)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Message"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="message"/> should be sent.</param>
            <param name="message">The <see cref="T:TcHmiSrv.Core.Message"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s.</param>
            <param name="lifetime">Specifies whether the <see cref="T:TcHmiSrv.Core.Event"/> is stored persistently.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Message"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Send(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Event,TcHmiSrv.Core.EventLifetime)">
            <summary>
            Adds or updates an <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> should be sent.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> to send to the TwinCAT HMI server and all current <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>s.</param>
            <param name="lifetime">Specifies whether the <see cref="T:TcHmiSrv.Core.Event"/> is stored persistently.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Core.Event"/> succeeded; otherwise any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Execute(TcHmiSrv.Core.Context@,TcHmiSrv.Core.CommandGroup)">
            <summary>
            Executes the specified <see cref="T:TcHmiSrv.Core.CommandGroup"/> inside any domain.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="commands"/> should be executed.</param>
            <param name="commands">A <see cref="T:TcHmiSrv.Core.CommandGroup"/> that contains the <see cref="T:TcHmiSrv.Core.Command"/>s to execute.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if executing the <paramref name="commands"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Execute(TcHmiSrv.Core.Context@,TcHmiSrv.Core.Command)">
            <summary>
            Executes a single <see cref="T:TcHmiSrv.Core.Command"/> in the domain of the specified <see cref="T:TcHmiSrv.Core.Context"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="command"/> should be executed.</param>
            <param name="command">The <see cref="T:TcHmiSrv.Core.Command"/> to execute.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if executing the <paramref name="command"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.Localize(TcHmiSrv.Core.Context,TcHmiSrv.Core.ILocalizable)">
            <summary>
            Localizes an <see cref="T:TcHmiSrv.Core.ILocalizable"/>.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="localizable"/> should be localized.</param>
            <param name="localizable">The <see cref="T:TcHmiSrv.Core.ILocalizable"/> to localize.</param>
            <returns>A <see cref="T:System.String"/> that contains the localized text.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.RegisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener)">
            <summary>
            Registers the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be registered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be registered at the TwinCAT HMI server.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.RegisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener,TcHmiSrv.Core.Value)">
            <summary>
            Registers the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server using the specified settings.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be registered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be registered at the TwinCAT HMI server.</param>
            <param name="settings">An <see cref="T:TcHmiSrv.Core.Value"/> that contains the settings to use for registration.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.UnregisterListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.Listeners.IListener)">
            <summary>
            Unregisters the specified <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> at the TwinCAT HMI server.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="handler"/> should be unregistered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.Core.Listeners.IListener"/> that should be unregistered.</param>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.NotifyListener(TcHmiSrv.Core.Context,TcHmiSrv.Core.AlarmChangeType,TcHmiSrv.Core.Alarm)">
            <summary>
            Sends a notification if an <see cref="T:TcHmiSrv.Core.Alarm"/> has changed.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="alarm"/> has changed.</param>
            <param name="type">The <see cref="T:TcHmiSrv.Core.AlarmChangeType"/>.</param>
            <param name="alarm">The <see cref="T:TcHmiSrv.Core.Alarm"/> that has changed.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the notification succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.GetConfigValue(TcHmiSrv.Core.Context,System.String)">
            <summary>
            Gets the configuration <see cref="T:TcHmiSrv.Core.Value"/> at the specified path.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to get the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the requested configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.Value"/> at the specified <paramref name="path"/> if it exists; otherwise a <see cref="T:TcHmiSrv.Core.Value"/> that of <see cref="F:TcHmiSrv.Core.ValueType.Null"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.SetConfigValue(TcHmiSrv.Core.Context,System.String,TcHmiSrv.Core.Value)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Core.Value"/> to a map or vector in the configuration of the TwinCAT HMI server extension or updates an existing configuration <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to set the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to set.</param>
            <param name="value">The configuration <see cref="T:TcHmiSrv.Core.Value"/> to set.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if setting the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.ReplaceConfigValue(TcHmiSrv.Core.Context,System.String,TcHmiSrv.Core.Value)">
            <summary>
            Replaces a <see cref="T:TcHmiSrv.Core.Value"/> in the configuration of the TwinCAT HMI server extension.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to replace the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to replace.</param>
            <param name="value">The new configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if replacing the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.RenameConfigValue(TcHmiSrv.Core.Context,System.String,System.String)">
            <summary>
            Renames a <see cref="T:TcHmiSrv.Core.Value"/> in the configuration of the TwinCAT HMI server extension.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to rename the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="oldPath">The old path of the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="newPath">The new path of the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if renaming the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.DeleteConfigValue(TcHmiSrv.Core.Context,System.String)">
            <summary>
            Deletes a <see cref="T:TcHmiSrv.Core.Value"/> from the configuration of the TwinCAT HMI server extension.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> that contains information about the user who tries to delete the configuration <see cref="T:TcHmiSrv.Core.Value"/>.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Core.Value"/> to delete.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if deleting the configuration <see cref="T:TcHmiSrv.Core.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.RemoveTemporaryEvent(TcHmiSrv.Core.Context,TcHmiSrv.Core.Event)">
            <summary>
            Sends a notification if an <see cref="T:TcHmiSrv.Core.Alarm"/> should be removed.
            </summary>
            <param name="context">The <see cref="T:TcHmiSrv.Core.Context"/> under which the <paramref name="e"/> has changed.</param>
            <param name="e">The <see cref="T:TcHmiSrv.Core.Event"/> should be removed.</param>
            <returns><see cref="F:TcHmiSrv.Core.ErrorValue.HMI_SUCCESS"/> if sending the notification succeeded; otherwise, any <see cref="T:TcHmiSrv.Core.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.ITcHmiSrvExtHost.ResetTemporaryEvents(TcHmiSrv.Core.Context)">
            <summary>
            Triggers a refresh of the list of events provided by a TwinCAT HMI server extension that implements the <see cref="T:TcHmiSrv.Core.Listeners.AlarmProviderListener"/>.
            </summary>
            <param name="context">A <see cref="T:TcHmiSrv.Core.Context"/> containing information about the user who tries to refresh temporary events and the domain of the TwinCAT HMI server extension that should be refreshed.</param>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.AlarmProviderListenerEventArgs.OnConfirmEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.AlarmProviderListener.OnConfirm"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AlarmProviderListenerEventArgs.OnConfirmEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AlarmProviderListenerEventArgs.OnConfirmEventArgs.Alarm">
            <summary>
            Gets the confirmed <see cref="T:TcHmiSrv.Core.Alarm"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.AlarmProviderListenerEventArgs.OnInitialListEventsEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.AlarmProviderListener.OnInitialListEvents"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AlarmProviderListenerEventArgs.OnInitialListEventsEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AlarmProviderListenerEventArgs.OnInitialListEventsEventArgs.Events">
            <summary>
            Gets the listed <see cref="T:TcHmiSrv.Core.Event"/>s.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.AlarmProviderListener">
            <summary>
            Represents a listener that listens on provided <see cref="T:TcHmiSrv.Core.Alarm"/>s. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AlarmProviderListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.AlarmProviderListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.AlarmProviderListener.OnConfirm">
            <summary>
            Called when an <see cref="T:TcHmiSrv.Core.Alarm"/> is confirmed.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.AlarmProviderListener.OnInitialListEvents">
            <summary>
            Called when the <see cref="T:TcHmiSrv.Core.Event"/>s are listed.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.AlarmProviderListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ErrorValue}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.AlarmProviderListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.AlarmProviderListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.AuthListenerEventArgs.OnLoginEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.AuthListener.OnLogin"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AuthListenerEventArgs.OnLoginEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AuthListenerEventArgs.OnLoginEventArgs.Value">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Value"/> that describes the user that tries to log in according to the JSON schema for symbol 'Login' as described in 'TcHmiSrv.Config.json'.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.AuthListenerEventArgs.OnLogoutEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.AuthListener.OnLogout"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AuthListenerEventArgs.OnLogoutEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.AuthListener">
            <summary>
            Represents a listener to implement a custom authorization. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.AuthListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.AuthListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.AuthListener.OnLogin">
            <summary>
            Called when a user tries to log in.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.AuthListener.OnLogout">
            <summary>
            Called when a user is logged out.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.AuthListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ErrorValue}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.AuthListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.AuthListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeChangeEventArgs">
            <summary>
            Provides data for a <see cref="E:TcHmiSrv.Core.Listeners.ConfigListener.BeforeChange"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeChangeEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeChangeEventArgs.Path">
            <summary>
            Gets the path of the <see cref="T:TcHmiSrv.Core.Value"/> to change.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeChangeEventArgs.Value">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Value"/> to change.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeChangeEventArgs.Reference">
            <summary>
            Gets the name of the JSON schema reference of the <see cref="T:TcHmiSrv.Core.Value"/> to change.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeDeleteEventArgs">
            <summary>
            Provides data for a <see cref="E:TcHmiSrv.Core.Listeners.ConfigListener.BeforeDelete"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeDeleteEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeDeleteEventArgs.Path">
            <summary>
            Gets the path of the <see cref="T:TcHmiSrv.Core.Value"/> to delete.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeDeleteEventArgs.Value">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Value"/> to delete.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeDeleteEventArgs.Reference">
            <summary>
            Gets the name of the JSON schema reference of the <see cref="T:TcHmiSrv.Core.Value"/> to delete.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeRenameEventArgs">
            <summary>
            Provides data for a <see cref="E:TcHmiSrv.Core.Listeners.ConfigListener.BeforeRename"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeRenameEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeRenameEventArgs.OldPath">
            <summary>
            Gets the old path of the <see cref="T:TcHmiSrv.Core.Value"/> to rename.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeRenameEventArgs.NewPath">
            <summary>
            Gets the new path of the <see cref="T:TcHmiSrv.Core.Value"/> to rename.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.BeforeRenameEventArgs.Reference">
            <summary>
            Gets the name of the JSON schema reference of the <see cref="T:TcHmiSrv.Core.Value"/> to rename.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnChangeEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.ConfigListener.OnChange"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnChangeEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnChangeEventArgs.Path">
            <summary>
            Gets the path of the changed <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnChangeEventArgs.Reference">
            <summary>
            Gets the name of the JSON schema reference of the changed <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnDeleteEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.ConfigListener.OnDelete"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnDeleteEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnDeleteEventArgs.Path">
            <summary>
            Gets the current path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnDeleteEventArgs.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnDeleteEventArgs.Reference">
            <summary>
            Gets the name of the JSON schema reference of the deleted <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnRenameEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.ConfigListener.OnRename"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnRenameEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnRenameEventArgs.OldPath">
            <summary>
            Gets the old path of the renamed <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnRenameEventArgs.NewPath">
            <summary>
            Gets the new path of the renamed <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListenerEventArgs.OnRenameEventArgs.Reference">
            <summary>
            Gets the name of the JSON schema reference of the renamed <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ConfigListener">
            <summary>
            Represents a listener to interact with the configuration of the TwinCAT HMI server configuration. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ConfigListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.ConfigListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ConfigListener.BeforeChange">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Core.Value"/> is changed.<br/>
            If an <see cref="T:System.Exception"/> is thrown, the change will be aborted.<br/>
            This method is also called for all parent elements in the path of the changed configuration <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ConfigListener.BeforeDelete">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Core.Value"/> is deleted.<br/>
            If an <see cref="T:System.Exception"/> is thrown, the deletion will be aborted.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ConfigListener.BeforeRename">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Core.Value"/> is renamed.<br/>
            If an <see cref="T:System.Exception"/> is thrown, renaming will be aborted.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ConfigListener.OnChange">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Core.Value"/> has been successfully changed.<br/>
            This method is also called for all parent elements in the path of the changed configuration <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ConfigListener.OnDelete">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Core.Value"/> has been deleted.<br/>
            This method is also called for all parent elements in the path of the deleted configuration <see cref="T:TcHmiSrv.Core.Value"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ConfigListener.OnRename">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Core.Value"/> has been renamed.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.ConfigListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ResultPair}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ResultPair"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.ConfigListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.ConfigListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnChangeEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.EventListener.OnChange"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnChangeEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnChangeEventArgs.Event">
            <summary>
            Gets the changed <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnChangeEventArgs.ExtensionSessionId">
            <summary>
            Gets the extension session identifier.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnRemoveEventEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.EventListener.OnRemoveEvent"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnRemoveEventEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnRemoveEventEventArgs.Event">
            <summary>
            Gets the changed <see cref="T:TcHmiSrv.Core.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnRemoveEventEventArgs.ExtensionSessionId">
            <summary>
            Gets the extension session identifier.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnReceiveEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.EventListener.OnReceive"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnReceiveEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnReceiveEventArgs.Events">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Command"/> that contains the listed <see cref="T:TcHmiSrv.Core.Event"/>s in its read-value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnReceiveEventArgs.ExtensionSessionId">
            <summary>
            Gets the extension session identifier.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnListEventsEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.EventListener.OnListEvents"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnListEventsEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnListEventsEventArgs.Command">
            <summary>
            Gets the <see cref="P:TcHmiSrv.Core.Listeners.EventListenerEventArgs.OnListEventsEventArgs.Command"/> that contains the listed <see cref="T:TcHmiSrv.Core.Event"/>s in its read-value.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.EventListener">
            <summary>
            Provides a listener to interact with the event system of the TwinCAT HMI server.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.EventListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.EventListener.OnChange">
            <summary>
            Called when an <see cref="T:TcHmiSrv.Core.Event"/> is changed.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.EventListener.OnRemoveEvent">
            <summary>
            Called when an <see cref="T:TcHmiSrv.Core.Event"/> is deleted.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.EventListener.OnReceive">
            <summary>
            Called when an extension is loaded and it's initial list of <see cref="T:TcHmiSrv.Core.Event"/>s is fetched.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.EventListener.OnListEvents">
            <summary>
            Called when the <see cref="T:TcHmiSrv.Core.Event"/>s are listed.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.EventListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ErrorValue}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.EventListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.EventListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.EventLocalizationListenerEventArgs.OnRequestEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.EventLocalizationListener.OnRequest"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventLocalizationListenerEventArgs.OnRequestEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventLocalizationListenerEventArgs.OnRequestEventArgs.Locale">
            <summary>
            Gets the locale in BCP 47 representation.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventLocalizationListenerEventArgs.OnRequestEventArgs.Localizable">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.ILocalizable"/> to localize.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventLocalizationListenerEventArgs.OnRequestEventArgs.Localized">
            <summary>
            Contains the localized <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.EventLocalizationListener">
            <summary>
            Represents a listener to interact with the event system of the TwinCAT HMI server. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.EventLocalizationListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.EventLocalizationListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.EventLocalizationListener.OnRequest">
            <summary>
            Called when a <see cref="T:System.String"/> cannot be localized using the language file of the TwinCAT HMI server extension.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.EventLocalizationListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ErrorValue}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.EventLocalizationListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.EventLocalizationListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeExportEventArgs">
            <summary>
            Provides data for a <see cref="E:TcHmiSrv.Core.Listeners.ExportListener.BeforeExport"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeExportEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeExportEventArgs.Path">
            <summary>
            Gets the path of the <see cref="T:TcHmiSrv.Core.Value"/> to export.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeExportEventArgs.Value">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Value"/> to export.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeExportEventArgs.Root">
            <summary>
            Gets the root <see cref="T:TcHmiSrv.Core.Value"/> that contains the whole data to export.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeExportEventArgs.Reference">
            <summary>
            Gets the name of the JSON schema reference of the <see cref="T:TcHmiSrv.Core.Value"/> to export.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeImportEventArgs">
            <summary>
            Provides data for a <see cref="E:TcHmiSrv.Core.Listeners.ExportListener.BeforeImport"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeImportEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeImportEventArgs.Path">
            <summary>
            Gets the path of the <see cref="T:TcHmiSrv.Core.Value"/> to import.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeImportEventArgs.Value">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Value"/> to import.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeImportEventArgs.Root">
            <summary>
            Gets the root <see cref="T:TcHmiSrv.Core.Value"/> that contains the whole data to import.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListenerEventArgs.BeforeImportEventArgs.Reference">
            <summary>
            Gets the name of the JSON schema reference of the <see cref="T:TcHmiSrv.Core.Value"/> to import.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ExportListener">
            <summary>
            Represents a listener to react on configuration exports and imports. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ExportListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.ExportListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ExportListener.BeforeExport">
            <summary>
            Called before a configuration export.<br/>
            If an <see cref="T:System.Exception"/> is thrown, the configuration export will be aborted.<br/>
            With complex data, this method is called for every path.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ExportListener.BeforeImport">
            <summary>
            Called before a configuration import.<br/>
            If an <see cref="T:System.Exception"/> is thrown, the configuration import will be aborted.<br/>
            With complex data, this method is called for every path.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.ExportListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ResultPair}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ResultPair"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.ExportListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.ExportListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.IListener">
            <summary>
            Provides an interface for a listener.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.IListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.IListener"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.Listener">
            <summary>
            Provides a base class for a listener.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.Listener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.Listener"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.Listener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.AuthListener"/>.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.Listener.Add(System.Object)">
            <summary>
            Adds the hash code of the specified <see cref="T:System.Object"/> to the hash codes of the added <see cref="T:System.EventHandler"/>s.
            </summary>
            <param name="handler">An <see cref="T:System.Object"/> that represents the added <see cref="T:System.EventHandler"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.Listener.Remove(System.Object)">
            <summary>
            Removes the hash code of the specified <see cref="T:System.Object"/> from the hash codes of the added <see cref="T:System.EventHandler"/>s.
            </summary>
            <param name="handler">An <see cref="T:System.Object"/> that represents the removed <see cref="T:System.EventHandler"/>.</param>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.NamespaceDoc">
            <summary>
            Contains the event listeners that are triggered by the TwinCAT HMI Server.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.NamespaceGroupDoc">
            <summary>
            Contains the event listeners that are triggered by the TwinCAT HMI Server and their <see cref="T:System.EventArgs"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.RequestListenerEventArgs.OnRequestEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.RequestListener.OnRequest"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.RequestListenerEventArgs.OnRequestEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.RequestListenerEventArgs.OnRequestEventArgs.Commands">
            <summary>
            Contains the <see cref="T:TcHmiSrv.Core.Command"/>s to invoke.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.RequestListener">
            <summary>
            Represents a listener to invoke read-write requests and subscriptions. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.RequestListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.RequestListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.RequestListener.OnRequest">
            <summary>
            Called when a client requests a symbol from the domain of the TwinCAT HMI server extension.<br/>
            This event will be called multiple times if <see cref="P:TcHmiSrv.Core.Context.RequestType"/> equals <see cref="F:TcHmiSrv.Core.RequestType.Subscription"/>.<br/>
            In a subscription the returned data will only be sent to clients if either the read value or the return codes changed.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.RequestListener.TcHmiSrv#Core#Events#IExternalCaller{System#String}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.RequestListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.RequestListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnLoginEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.SessionListener.OnLogin"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnLoginEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnLogoutEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.SessionListener.OnLogout"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnLogoutEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnCreateWebSocketEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.SessionListener.OnCreateWebSocket"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnCreateWebSocketEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnCloseWebSocketEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.SessionListener.OnCloseWebSocket"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnCloseWebSocketEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnCreateSessionEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.SessionListener.OnCreateSession"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnCreateSessionEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnCloseSessionEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.SessionListener.OnCloseSession"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SessionListenerEventArgs.OnCloseSessionEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SessionListener">
            <summary>
            Represents a listener to observe the connections of the TwinCAT HMI server. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SessionListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.SessionListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.SessionListener.OnLogin">
            <summary>
            Called when a user is logged in.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.SessionListener.OnLogout">
            <summary>
            Called when a user is logged out.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.SessionListener.OnCreateWebSocket">
            <summary>
            Called when a new WebSocket connection is created.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.SessionListener.OnCloseWebSocket">
            <summary>
            Called when an existing WebSocket connection is closed.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.SessionListener.OnCreateSession">
            <summary>
            Called when a new session is created.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.SessionListener.OnCloseSession">
            <summary>
            Called when a session is closed.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.SessionListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ErrorValue}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.SessionListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.SessionListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ShutdownListenerEventArgs.OnShutdownEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.ShutdownListener.OnShutdown"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ShutdownListenerEventArgs.OnShutdownEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.ShutdownListener">
            <summary>
            Represents a listener to get notified when the TwinCAT HMI server is shutting down. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.ShutdownListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.ShutdownListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.ShutdownListener.OnShutdown">
            <summary>
            Called when the TwinCAT HMI server is shutting down.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.ShutdownListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ErrorValue}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.ShutdownListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.ShutdownListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SubscriptionListenerEventArgs.OnSubscribeEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.SubscriptionListener.OnSubscribe"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SubscriptionListenerEventArgs.OnSubscribeEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SubscriptionListenerEventArgs.OnUnsubscribeEventArgs">
            <summary>
            Provides data for an <see cref="E:TcHmiSrv.Core.Listeners.SubscriptionListener.OnUnsubscribe"/> event.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SubscriptionListenerEventArgs.OnUnsubscribeEventArgs.Context">
            <summary>
            Gets the <see cref="T:TcHmiSrv.Core.Context"/> of the event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Listeners.SubscriptionListener">
            <summary>
            Represents a listener to get notified when a client opens or closes a subscription.<br/>
            If this listener is not registered at the TwinCAT HMI server, subscriptions will just call the <see cref="E:TcHmiSrv.Core.Listeners.RequestListener.OnRequest"/> event.<br/>
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Core.Listeners.SubscriptionListener.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Core.Listeners.SubscriptionListener"/>.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.SubscriptionListener.OnSubscribe">
            <summary>
            Called when a client opens a new subscription.<br/>
            The subscription will call the <see cref="E:TcHmiSrv.Core.Listeners.RequestListener.OnRequest"/> once per specified interval.
            </summary>
        </member>
        <member name="E:TcHmiSrv.Core.Listeners.SubscriptionListener.OnUnsubscribe">
            <summary>
            Called when a client closes a subscription.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.SubscriptionListener.TcHmiSrv#Core#Events#IExternalCaller{System#String,TcHmiSrv#Core#ErrorValue}#ExternalCall(System.String,System.EventArgs)">
            <summary>
            Calls an event from outside the type that defines the event.
            </summary>
            <param name="value">A value that is used to identify which event should be called.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> to pass to the event to call.</param>
            <returns>The <see cref="T:TcHmiSrv.Core.ErrorValue"/> that is returned by the called event.</returns>
        </member>
        <member name="M:TcHmiSrv.Core.Listeners.SubscriptionListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Core.Listeners.SubscriptionListener"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.NamespaceDoc">
            <summary>
            Contains the core types of the TwinCAT HMI server extension API.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Core.Substitution.IExchangeable`1">
            <summary>
            Defines a method to exchange the value of the current instance with the value of another instance of a specified type.
            </summary>
            <typeparam name="T">The type of the value to be exchanged.</typeparam>
        </member>
        <member name="M:TcHmiSrv.Core.Substitution.IExchangeable`1.Exchange(`0)">
            <summary>
            Exchanges the value of the current instance with the value of another instance.<br/>
            When this method returns, the current instance contains the value of <paramref name="other"/>, but <paramref name="other"/> does not contains the value of the current instance before it was exchanged.
            </summary>
            <param name="other">An instance to be exchanged with the current instance.</param>
        </member>
        <member name="T:TcHmiSrv.Core.UnixTime">
            <summary>
            Provides the zero <see cref="T:System.DateTime"/> value that represents the default <see cref="T:System.DateTime"/> value of the TwinCAT HMI server.
            </summary>
        </member>
        <member name="F:TcHmiSrv.Core.UnixTime.UnixEpoch">
            <summary>
            Represents the zero <see cref="T:System.DateTime"/> value, that is the time 00:00:00 UTC on 1 January 1970.
            </summary>
        </member>
    </members>
</doc>
